//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TMS_Recycling {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetOnlyInvoices")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetOnlyInvoices : global::System.Data.DataSet {
        
        private InvoiceSetDataTable tableInvoiceSet;
        
        private RelationAddressSetDataTable tableRelationAddressSet;
        
        private LocationSetDataTable tableLocationSet;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetOnlyInvoices() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSetOnlyInvoices(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["InvoiceSet"] != null)) {
                    base.Tables.Add(new InvoiceSetDataTable(ds.Tables["InvoiceSet"]));
                }
                if ((ds.Tables["RelationAddressSet"] != null)) {
                    base.Tables.Add(new RelationAddressSetDataTable(ds.Tables["RelationAddressSet"]));
                }
                if ((ds.Tables["LocationSet"] != null)) {
                    base.Tables.Add(new LocationSetDataTable(ds.Tables["LocationSet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InvoiceSetDataTable InvoiceSet {
            get {
                return this.tableInvoiceSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelationAddressSetDataTable RelationAddressSet {
            get {
                return this.tableRelationAddressSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LocationSetDataTable LocationSet {
            get {
                return this.tableLocationSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetOnlyInvoices cln = ((DataSetOnlyInvoices)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["InvoiceSet"] != null)) {
                    base.Tables.Add(new InvoiceSetDataTable(ds.Tables["InvoiceSet"]));
                }
                if ((ds.Tables["RelationAddressSet"] != null)) {
                    base.Tables.Add(new RelationAddressSetDataTable(ds.Tables["RelationAddressSet"]));
                }
                if ((ds.Tables["LocationSet"] != null)) {
                    base.Tables.Add(new LocationSetDataTable(ds.Tables["LocationSet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableInvoiceSet = ((InvoiceSetDataTable)(base.Tables["InvoiceSet"]));
            if ((initTable == true)) {
                if ((this.tableInvoiceSet != null)) {
                    this.tableInvoiceSet.InitVars();
                }
            }
            this.tableRelationAddressSet = ((RelationAddressSetDataTable)(base.Tables["RelationAddressSet"]));
            if ((initTable == true)) {
                if ((this.tableRelationAddressSet != null)) {
                    this.tableRelationAddressSet.InitVars();
                }
            }
            this.tableLocationSet = ((LocationSetDataTable)(base.Tables["LocationSet"]));
            if ((initTable == true)) {
                if ((this.tableLocationSet != null)) {
                    this.tableLocationSet.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetOnlyInvoices";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetOnlyInvoices.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableInvoiceSet = new InvoiceSetDataTable();
            base.Tables.Add(this.tableInvoiceSet);
            this.tableRelationAddressSet = new RelationAddressSetDataTable();
            base.Tables.Add(this.tableRelationAddressSet);
            this.tableLocationSet = new LocationSetDataTable();
            base.Tables.Add(this.tableLocationSet);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInvoiceSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRelationAddressSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLocationSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetOnlyInvoices ds = new DataSetOnlyInvoices();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InvoiceSetRowChangeEventHandler(object sender, InvoiceSetRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RelationAddressSetRowChangeEventHandler(object sender, RelationAddressSetRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LocationSetRowChangeEventHandler(object sender, LocationSetRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InvoiceSetDataTable : global::System.Data.TypedTableBase<InvoiceSetRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnModifyDateTime;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreateUser;
            
            private global::System.Data.DataColumn columnModifyUser;
            
            private global::System.Data.DataColumn columnInvoiceNumber;
            
            private global::System.Data.DataColumn columnInvoiceStatus;
            
            private global::System.Data.DataColumn columnInvoiceType;
            
            private global::System.Data.DataColumn columnBookingDateTime;
            
            private global::System.Data.DataColumn columnYourReference;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnVATPrice;
            
            private global::System.Data.DataColumn columnTotalPrice;
            
            private global::System.Data.DataColumn columnInvoiceNote;
            
            private global::System.Data.DataColumn columnLedger_Id;
            
            private global::System.Data.DataColumn columnRelation_Id;
            
            private global::System.Data.DataColumn columnLocation_Id;
            
            private global::System.Data.DataColumn columnIsCorrected;
            
            private global::System.Data.DataColumn columnGroupCode;
            
            private global::System.Data.DataColumn columnDiscountPercentage;
            
            private global::System.Data.DataColumn columnInvoiceSubType;
            
            private global::System.Data.DataColumn columnAlreadyPaid;
            
            private global::System.Data.DataColumn columnPriceWithoutDiscount;
            
            private global::System.Data.DataColumn columnLocationSetDescription;
            
            private global::System.Data.DataColumn columnRelationSetDescription;
            
            private global::System.Data.DataColumn columnCustomerNumber;
            
            private global::System.Data.DataColumn columnRelationSetId;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnVATNumber;
            
            private global::System.Data.DataColumn columnEMail;
            
            private global::System.Data.DataColumn columnCustomerType;
            
            private global::System.Data.DataColumn columnPreferredCurrency;
            
            private global::System.Data.DataColumn columnFaxNumber;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnRelationSetYourReference;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceSetDataTable() {
                this.TableName = "InvoiceSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InvoiceSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InvoiceSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyDateTimeColumn {
                get {
                    return this.columnModifyDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateUserColumn {
                get {
                    return this.columnCreateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyUserColumn {
                get {
                    return this.columnModifyUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceStatusColumn {
                get {
                    return this.columnInvoiceStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceTypeColumn {
                get {
                    return this.columnInvoiceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingDateTimeColumn {
                get {
                    return this.columnBookingDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YourReferenceColumn {
                get {
                    return this.columnYourReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VATPriceColumn {
                get {
                    return this.columnVATPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPriceColumn {
                get {
                    return this.columnTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceNoteColumn {
                get {
                    return this.columnInvoiceNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ledger_IdColumn {
                get {
                    return this.columnLedger_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Relation_IdColumn {
                get {
                    return this.columnRelation_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Location_IdColumn {
                get {
                    return this.columnLocation_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCorrectedColumn {
                get {
                    return this.columnIsCorrected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GroupCodeColumn {
                get {
                    return this.columnGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountPercentageColumn {
                get {
                    return this.columnDiscountPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceSubTypeColumn {
                get {
                    return this.columnInvoiceSubType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlreadyPaidColumn {
                get {
                    return this.columnAlreadyPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceWithoutDiscountColumn {
                get {
                    return this.columnPriceWithoutDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationSetDescriptionColumn {
                get {
                    return this.columnLocationSetDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelationSetDescriptionColumn {
                get {
                    return this.columnRelationSetDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerNumberColumn {
                get {
                    return this.columnCustomerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelationSetIdColumn {
                get {
                    return this.columnRelationSetId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VATNumberColumn {
                get {
                    return this.columnVATNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailColumn {
                get {
                    return this.columnEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerTypeColumn {
                get {
                    return this.columnCustomerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreferredCurrencyColumn {
                get {
                    return this.columnPreferredCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaxNumberColumn {
                get {
                    return this.columnFaxNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelationSetYourReferenceColumn {
                get {
                    return this.columnRelationSetYourReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceSetRow this[int index] {
                get {
                    return ((InvoiceSetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoiceSetRowChangeEventHandler InvoiceSetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoiceSetRowChangeEventHandler InvoiceSetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoiceSetRowChangeEventHandler InvoiceSetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoiceSetRowChangeEventHandler InvoiceSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInvoiceSetRow(InvoiceSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceSetRow AddInvoiceSetRow(
                        System.Guid Id, 
                        System.DateTime CreateDateTime, 
                        System.DateTime ModifyDateTime, 
                        string Description, 
                        System.Guid CreateUser, 
                        System.Guid ModifyUser, 
                        string InvoiceStatus, 
                        string InvoiceType, 
                        System.DateTime BookingDateTime, 
                        string YourReference, 
                        double Price, 
                        double VATPrice, 
                        double TotalPrice, 
                        string InvoiceNote, 
                        System.Guid Ledger_Id, 
                        System.Guid Relation_Id, 
                        System.Guid Location_Id, 
                        bool IsCorrected, 
                        System.Guid GroupCode, 
                        double DiscountPercentage, 
                        string InvoiceSubType, 
                        double AlreadyPaid, 
                        double PriceWithoutDiscount, 
                        string LocationSetDescription, 
                        string RelationSetDescription, 
                        System.Guid RelationSetId, 
                        string PhoneNumber, 
                        string VATNumber, 
                        string EMail, 
                        string CustomerType, 
                        string PreferredCurrency, 
                        string FaxNumber, 
                        string Country, 
                        string RelationSetYourReference) {
                InvoiceSetRow rowInvoiceSetRow = ((InvoiceSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        CreateDateTime,
                        ModifyDateTime,
                        Description,
                        CreateUser,
                        ModifyUser,
                        null,
                        InvoiceStatus,
                        InvoiceType,
                        BookingDateTime,
                        YourReference,
                        Price,
                        VATPrice,
                        TotalPrice,
                        InvoiceNote,
                        Ledger_Id,
                        Relation_Id,
                        Location_Id,
                        IsCorrected,
                        GroupCode,
                        DiscountPercentage,
                        InvoiceSubType,
                        AlreadyPaid,
                        PriceWithoutDiscount,
                        LocationSetDescription,
                        RelationSetDescription,
                        null,
                        RelationSetId,
                        PhoneNumber,
                        VATNumber,
                        EMail,
                        CustomerType,
                        PreferredCurrency,
                        FaxNumber,
                        Country,
                        RelationSetYourReference};
                rowInvoiceSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInvoiceSetRow);
                return rowInvoiceSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceSetRow FindById(System.Guid Id) {
                return ((InvoiceSetRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InvoiceSetDataTable cln = ((InvoiceSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InvoiceSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnModifyDateTime = base.Columns["ModifyDateTime"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreateUser = base.Columns["CreateUser"];
                this.columnModifyUser = base.Columns["ModifyUser"];
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnInvoiceStatus = base.Columns["InvoiceStatus"];
                this.columnInvoiceType = base.Columns["InvoiceType"];
                this.columnBookingDateTime = base.Columns["BookingDateTime"];
                this.columnYourReference = base.Columns["YourReference"];
                this.columnPrice = base.Columns["Price"];
                this.columnVATPrice = base.Columns["VATPrice"];
                this.columnTotalPrice = base.Columns["TotalPrice"];
                this.columnInvoiceNote = base.Columns["InvoiceNote"];
                this.columnLedger_Id = base.Columns["Ledger_Id"];
                this.columnRelation_Id = base.Columns["Relation_Id"];
                this.columnLocation_Id = base.Columns["Location_Id"];
                this.columnIsCorrected = base.Columns["IsCorrected"];
                this.columnGroupCode = base.Columns["GroupCode"];
                this.columnDiscountPercentage = base.Columns["DiscountPercentage"];
                this.columnInvoiceSubType = base.Columns["InvoiceSubType"];
                this.columnAlreadyPaid = base.Columns["AlreadyPaid"];
                this.columnPriceWithoutDiscount = base.Columns["PriceWithoutDiscount"];
                this.columnLocationSetDescription = base.Columns["LocationSetDescription"];
                this.columnRelationSetDescription = base.Columns["RelationSetDescription"];
                this.columnCustomerNumber = base.Columns["CustomerNumber"];
                this.columnRelationSetId = base.Columns["RelationSetId"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnVATNumber = base.Columns["VATNumber"];
                this.columnEMail = base.Columns["EMail"];
                this.columnCustomerType = base.Columns["CustomerType"];
                this.columnPreferredCurrency = base.Columns["PreferredCurrency"];
                this.columnFaxNumber = base.Columns["FaxNumber"];
                this.columnCountry = base.Columns["Country"];
                this.columnRelationSetYourReference = base.Columns["RelationSetYourReference"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnModifyDateTime = new global::System.Data.DataColumn("ModifyDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDateTime);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreateUser = new global::System.Data.DataColumn("CreateUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUser);
                this.columnModifyUser = new global::System.Data.DataColumn("ModifyUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyUser);
                this.columnInvoiceNumber = new global::System.Data.DataColumn("InvoiceNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnInvoiceStatus = new global::System.Data.DataColumn("InvoiceStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceStatus);
                this.columnInvoiceType = new global::System.Data.DataColumn("InvoiceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceType);
                this.columnBookingDateTime = new global::System.Data.DataColumn("BookingDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingDateTime);
                this.columnYourReference = new global::System.Data.DataColumn("YourReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYourReference);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnVATPrice = new global::System.Data.DataColumn("VATPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATPrice);
                this.columnTotalPrice = new global::System.Data.DataColumn("TotalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPrice);
                this.columnInvoiceNote = new global::System.Data.DataColumn("InvoiceNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNote);
                this.columnLedger_Id = new global::System.Data.DataColumn("Ledger_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLedger_Id);
                this.columnRelation_Id = new global::System.Data.DataColumn("Relation_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelation_Id);
                this.columnLocation_Id = new global::System.Data.DataColumn("Location_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_Id);
                this.columnIsCorrected = new global::System.Data.DataColumn("IsCorrected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCorrected);
                this.columnGroupCode = new global::System.Data.DataColumn("GroupCode", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupCode);
                this.columnDiscountPercentage = new global::System.Data.DataColumn("DiscountPercentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountPercentage);
                this.columnInvoiceSubType = new global::System.Data.DataColumn("InvoiceSubType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceSubType);
                this.columnAlreadyPaid = new global::System.Data.DataColumn("AlreadyPaid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlreadyPaid);
                this.columnPriceWithoutDiscount = new global::System.Data.DataColumn("PriceWithoutDiscount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceWithoutDiscount);
                this.columnLocationSetDescription = new global::System.Data.DataColumn("LocationSetDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationSetDescription);
                this.columnRelationSetDescription = new global::System.Data.DataColumn("RelationSetDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationSetDescription);
                this.columnCustomerNumber = new global::System.Data.DataColumn("CustomerNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerNumber);
                this.columnRelationSetId = new global::System.Data.DataColumn("RelationSetId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationSetId);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnVATNumber = new global::System.Data.DataColumn("VATNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATNumber);
                this.columnEMail = new global::System.Data.DataColumn("EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail);
                this.columnCustomerType = new global::System.Data.DataColumn("CustomerType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerType);
                this.columnPreferredCurrency = new global::System.Data.DataColumn("PreferredCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreferredCurrency);
                this.columnFaxNumber = new global::System.Data.DataColumn("FaxNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaxNumber);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnRelationSetYourReference = new global::System.Data.DataColumn("RelationSetYourReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationSetYourReference);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnCreateDateTime.AllowDBNull = false;
                this.columnModifyDateTime.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 250;
                this.columnCreateUser.AllowDBNull = false;
                this.columnModifyUser.AllowDBNull = false;
                this.columnInvoiceNumber.AutoIncrement = true;
                this.columnInvoiceNumber.AutoIncrementSeed = -1;
                this.columnInvoiceNumber.AutoIncrementStep = -1;
                this.columnInvoiceNumber.AllowDBNull = false;
                this.columnInvoiceNumber.ReadOnly = true;
                this.columnInvoiceStatus.AllowDBNull = false;
                this.columnInvoiceStatus.MaxLength = 5;
                this.columnInvoiceType.AllowDBNull = false;
                this.columnInvoiceType.MaxLength = 5;
                this.columnBookingDateTime.AllowDBNull = false;
                this.columnYourReference.AllowDBNull = false;
                this.columnYourReference.MaxLength = 40;
                this.columnPrice.AllowDBNull = false;
                this.columnVATPrice.AllowDBNull = false;
                this.columnTotalPrice.AllowDBNull = false;
                this.columnInvoiceNote.AllowDBNull = false;
                this.columnInvoiceNote.MaxLength = 1000;
                this.columnLedger_Id.AllowDBNull = false;
                this.columnIsCorrected.AllowDBNull = false;
                this.columnGroupCode.AllowDBNull = false;
                this.columnDiscountPercentage.AllowDBNull = false;
                this.columnInvoiceSubType.AllowDBNull = false;
                this.columnInvoiceSubType.MaxLength = 10;
                this.columnAlreadyPaid.AllowDBNull = false;
                this.columnPriceWithoutDiscount.AllowDBNull = false;
                this.columnLocationSetDescription.AllowDBNull = false;
                this.columnLocationSetDescription.MaxLength = 250;
                this.columnRelationSetDescription.AllowDBNull = false;
                this.columnRelationSetDescription.MaxLength = 250;
                this.columnCustomerNumber.AutoIncrement = true;
                this.columnCustomerNumber.AutoIncrementSeed = -1;
                this.columnCustomerNumber.AutoIncrementStep = -1;
                this.columnCustomerNumber.AllowDBNull = false;
                this.columnCustomerNumber.ReadOnly = true;
                this.columnRelationSetId.AllowDBNull = false;
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 40;
                this.columnVATNumber.AllowDBNull = false;
                this.columnVATNumber.MaxLength = 40;
                this.columnEMail.AllowDBNull = false;
                this.columnEMail.MaxLength = 40;
                this.columnCustomerType.AllowDBNull = false;
                this.columnCustomerType.MaxLength = 15;
                this.columnPreferredCurrency.AllowDBNull = false;
                this.columnPreferredCurrency.MaxLength = 3;
                this.columnFaxNumber.AllowDBNull = false;
                this.columnFaxNumber.MaxLength = 40;
                this.columnCountry.AllowDBNull = false;
                this.columnCountry.MaxLength = 100;
                this.columnRelationSetYourReference.AllowDBNull = false;
                this.columnRelationSetYourReference.MaxLength = 40;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceSetRow NewInvoiceSetRow() {
                return ((InvoiceSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InvoiceSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InvoiceSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InvoiceSetRowChanged != null)) {
                    this.InvoiceSetRowChanged(this, new InvoiceSetRowChangeEvent(((InvoiceSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InvoiceSetRowChanging != null)) {
                    this.InvoiceSetRowChanging(this, new InvoiceSetRowChangeEvent(((InvoiceSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InvoiceSetRowDeleted != null)) {
                    this.InvoiceSetRowDeleted(this, new InvoiceSetRowChangeEvent(((InvoiceSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InvoiceSetRowDeleting != null)) {
                    this.InvoiceSetRowDeleting(this, new InvoiceSetRowChangeEvent(((InvoiceSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInvoiceSetRow(InvoiceSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetOnlyInvoices ds = new DataSetOnlyInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InvoiceSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelationAddressSetDataTable : global::System.Data.TypedTableBase<RelationAddressSetRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnModifyDateTime;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnCreateUser;
            
            private global::System.Data.DataColumn columnModifyUser;
            
            private global::System.Data.DataColumn columnAdressLine1;
            
            private global::System.Data.DataColumn columnAdressLine2;
            
            private global::System.Data.DataColumn columnAdressLine3;
            
            private global::System.Data.DataColumn columnZIPcode;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnRelation_Id;
            
            private global::System.Data.DataColumn columnAdressType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetDataTable() {
                this.TableName = "RelationAddressSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RelationAddressSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RelationAddressSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyDateTimeColumn {
                get {
                    return this.columnModifyDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateUserColumn {
                get {
                    return this.columnCreateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyUserColumn {
                get {
                    return this.columnModifyUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine1Column {
                get {
                    return this.columnAdressLine1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine2Column {
                get {
                    return this.columnAdressLine2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine3Column {
                get {
                    return this.columnAdressLine3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZIPcodeColumn {
                get {
                    return this.columnZIPcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Relation_IdColumn {
                get {
                    return this.columnRelation_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressTypeColumn {
                get {
                    return this.columnAdressType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow this[int index] {
                get {
                    return ((RelationAddressSetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationAddressSetRowChangeEventHandler RelationAddressSetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationAddressSetRowChangeEventHandler RelationAddressSetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationAddressSetRowChangeEventHandler RelationAddressSetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationAddressSetRowChangeEventHandler RelationAddressSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRelationAddressSetRow(RelationAddressSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow AddRelationAddressSetRow(
                        System.Guid Id, 
                        System.DateTime CreateDateTime, 
                        System.DateTime ModifyDateTime, 
                        string Description, 
                        string Comments, 
                        System.Guid CreateUser, 
                        System.Guid ModifyUser, 
                        string AdressLine1, 
                        string AdressLine2, 
                        string AdressLine3, 
                        string ZIPcode, 
                        string City, 
                        string Country, 
                        bool IsActive, 
                        System.Guid Relation_Id, 
                        string AdressType) {
                RelationAddressSetRow rowRelationAddressSetRow = ((RelationAddressSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        CreateDateTime,
                        ModifyDateTime,
                        Description,
                        Comments,
                        CreateUser,
                        ModifyUser,
                        AdressLine1,
                        AdressLine2,
                        AdressLine3,
                        ZIPcode,
                        City,
                        Country,
                        IsActive,
                        Relation_Id,
                        AdressType};
                rowRelationAddressSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelationAddressSetRow);
                return rowRelationAddressSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow FindById(System.Guid Id) {
                return ((RelationAddressSetRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RelationAddressSetDataTable cln = ((RelationAddressSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RelationAddressSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnModifyDateTime = base.Columns["ModifyDateTime"];
                this.columnDescription = base.Columns["Description"];
                this.columnComments = base.Columns["Comments"];
                this.columnCreateUser = base.Columns["CreateUser"];
                this.columnModifyUser = base.Columns["ModifyUser"];
                this.columnAdressLine1 = base.Columns["AdressLine1"];
                this.columnAdressLine2 = base.Columns["AdressLine2"];
                this.columnAdressLine3 = base.Columns["AdressLine3"];
                this.columnZIPcode = base.Columns["ZIPcode"];
                this.columnCity = base.Columns["City"];
                this.columnCountry = base.Columns["Country"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnRelation_Id = base.Columns["Relation_Id"];
                this.columnAdressType = base.Columns["AdressType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnModifyDateTime = new global::System.Data.DataColumn("ModifyDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDateTime);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnCreateUser = new global::System.Data.DataColumn("CreateUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUser);
                this.columnModifyUser = new global::System.Data.DataColumn("ModifyUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyUser);
                this.columnAdressLine1 = new global::System.Data.DataColumn("AdressLine1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine1);
                this.columnAdressLine2 = new global::System.Data.DataColumn("AdressLine2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine2);
                this.columnAdressLine3 = new global::System.Data.DataColumn("AdressLine3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine3);
                this.columnZIPcode = new global::System.Data.DataColumn("ZIPcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIPcode);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnRelation_Id = new global::System.Data.DataColumn("Relation_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelation_Id);
                this.columnAdressType = new global::System.Data.DataColumn("AdressType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnCreateDateTime.AllowDBNull = false;
                this.columnModifyDateTime.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 250;
                this.columnComments.AllowDBNull = false;
                this.columnComments.MaxLength = 4000;
                this.columnCreateUser.AllowDBNull = false;
                this.columnModifyUser.AllowDBNull = false;
                this.columnAdressLine1.AllowDBNull = false;
                this.columnAdressLine1.MaxLength = 250;
                this.columnAdressLine2.AllowDBNull = false;
                this.columnAdressLine2.MaxLength = 250;
                this.columnAdressLine3.AllowDBNull = false;
                this.columnAdressLine3.MaxLength = 250;
                this.columnZIPcode.AllowDBNull = false;
                this.columnZIPcode.MaxLength = 20;
                this.columnCity.AllowDBNull = false;
                this.columnCity.MaxLength = 100;
                this.columnCountry.AllowDBNull = false;
                this.columnCountry.MaxLength = 100;
                this.columnIsActive.AllowDBNull = false;
                this.columnRelation_Id.AllowDBNull = false;
                this.columnAdressType.AllowDBNull = false;
                this.columnAdressType.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow NewRelationAddressSetRow() {
                return ((RelationAddressSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RelationAddressSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RelationAddressSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RelationAddressSetRowChanged != null)) {
                    this.RelationAddressSetRowChanged(this, new RelationAddressSetRowChangeEvent(((RelationAddressSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RelationAddressSetRowChanging != null)) {
                    this.RelationAddressSetRowChanging(this, new RelationAddressSetRowChangeEvent(((RelationAddressSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RelationAddressSetRowDeleted != null)) {
                    this.RelationAddressSetRowDeleted(this, new RelationAddressSetRowChangeEvent(((RelationAddressSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RelationAddressSetRowDeleting != null)) {
                    this.RelationAddressSetRowDeleting(this, new RelationAddressSetRowChangeEvent(((RelationAddressSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRelationAddressSetRow(RelationAddressSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetOnlyInvoices ds = new DataSetOnlyInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelationAddressSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LocationSetDataTable : global::System.Data.TypedTableBase<LocationSetRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnModifyDateTime;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreateUser;
            
            private global::System.Data.DataColumn columnModifyUser;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnZIPcode;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnVATNumber;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnEMail;
            
            private global::System.Data.DataColumn columnPreferredCurrency;
            
            private global::System.Data.DataColumn columnLocationNumber;
            
            private global::System.Data.DataColumn columnAdressLine1;
            
            private global::System.Data.DataColumn columnAdressLine2;
            
            private global::System.Data.DataColumn columnAdressLine3;
            
            private global::System.Data.DataColumn columnInvoiceAddress;
            
            private global::System.Data.DataColumn columnInvoiceFooter;
            
            private global::System.Data.DataColumn columnInvoicePrintLogo;
            
            private global::System.Data.DataColumn columnDefaultVATPercentage;
            
            private global::System.Data.DataColumn columnDefaultHourlyRate;
            
            private global::System.Data.DataColumn columnDefaultWeighingTariff;
            
            private global::System.Data.DataColumn columnMaterialForDirtId;
            
            private global::System.Data.DataColumn columnMaterialForWorkId;
            
            private global::System.Data.DataColumn columnCashLedgerId;
            
            private global::System.Data.DataColumn columnBankLedgerId;
            
            private global::System.Data.DataColumn columnInvoiceFooterPerPage;
            
            private global::System.Data.DataColumn columnCompanyLogoImage;
            
            private global::System.Data.DataColumn columnCompanyMembershipsLogo;
            
            private global::System.Data.DataColumn columnDefaultWeighingTariffBookingCode_Id;
            
            private global::System.Data.DataColumn columnRelationSale_Id;
            
            private global::System.Data.DataColumn columnRelationBuy_Id;
            
            private global::System.Data.DataColumn columnDefaultBailPriceBookingCode_Id;
            
            private global::System.Data.DataColumn columnVIHBCode;
            
            private global::System.Data.DataColumn columnContactPerson;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetDataTable() {
                this.TableName = "LocationSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LocationSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LocationSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyDateTimeColumn {
                get {
                    return this.columnModifyDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateUserColumn {
                get {
                    return this.columnCreateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyUserColumn {
                get {
                    return this.columnModifyUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZIPcodeColumn {
                get {
                    return this.columnZIPcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VATNumberColumn {
                get {
                    return this.columnVATNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailColumn {
                get {
                    return this.columnEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreferredCurrencyColumn {
                get {
                    return this.columnPreferredCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationNumberColumn {
                get {
                    return this.columnLocationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine1Column {
                get {
                    return this.columnAdressLine1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine2Column {
                get {
                    return this.columnAdressLine2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine3Column {
                get {
                    return this.columnAdressLine3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceAddressColumn {
                get {
                    return this.columnInvoiceAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceFooterColumn {
                get {
                    return this.columnInvoiceFooter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicePrintLogoColumn {
                get {
                    return this.columnInvoicePrintLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultVATPercentageColumn {
                get {
                    return this.columnDefaultVATPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultHourlyRateColumn {
                get {
                    return this.columnDefaultHourlyRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultWeighingTariffColumn {
                get {
                    return this.columnDefaultWeighingTariff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialForDirtIdColumn {
                get {
                    return this.columnMaterialForDirtId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialForWorkIdColumn {
                get {
                    return this.columnMaterialForWorkId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CashLedgerIdColumn {
                get {
                    return this.columnCashLedgerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankLedgerIdColumn {
                get {
                    return this.columnBankLedgerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceFooterPerPageColumn {
                get {
                    return this.columnInvoiceFooterPerPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyLogoImageColumn {
                get {
                    return this.columnCompanyLogoImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyMembershipsLogoColumn {
                get {
                    return this.columnCompanyMembershipsLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultWeighingTariffBookingCode_IdColumn {
                get {
                    return this.columnDefaultWeighingTariffBookingCode_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelationSale_IdColumn {
                get {
                    return this.columnRelationSale_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelationBuy_IdColumn {
                get {
                    return this.columnRelationBuy_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultBailPriceBookingCode_IdColumn {
                get {
                    return this.columnDefaultBailPriceBookingCode_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIHBCodeColumn {
                get {
                    return this.columnVIHBCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactPersonColumn {
                get {
                    return this.columnContactPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow this[int index] {
                get {
                    return ((LocationSetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LocationSetRowChangeEventHandler LocationSetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LocationSetRowChangeEventHandler LocationSetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LocationSetRowChangeEventHandler LocationSetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LocationSetRowChangeEventHandler LocationSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLocationSetRow(LocationSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow AddLocationSetRow(
                        System.Guid Id, 
                        System.DateTime CreateDateTime, 
                        System.DateTime ModifyDateTime, 
                        string Description, 
                        System.Guid CreateUser, 
                        System.Guid ModifyUser, 
                        bool IsActive, 
                        string ZIPcode, 
                        string City, 
                        string Country, 
                        string VATNumber, 
                        string PhoneNumber, 
                        string EMail, 
                        string PreferredCurrency, 
                        string AdressLine1, 
                        string AdressLine2, 
                        string AdressLine3, 
                        string InvoiceAddress, 
                        string InvoiceFooter, 
                        bool InvoicePrintLogo, 
                        double DefaultVATPercentage, 
                        double DefaultHourlyRate, 
                        double DefaultWeighingTariff, 
                        System.Guid MaterialForDirtId, 
                        System.Guid MaterialForWorkId, 
                        System.Guid CashLedgerId, 
                        System.Guid BankLedgerId, 
                        string InvoiceFooterPerPage, 
                        byte[] CompanyLogoImage, 
                        byte[] CompanyMembershipsLogo, 
                        System.Guid DefaultWeighingTariffBookingCode_Id, 
                        System.Guid RelationSale_Id, 
                        System.Guid RelationBuy_Id, 
                        System.Guid DefaultBailPriceBookingCode_Id, 
                        string VIHBCode, 
                        string ContactPerson) {
                LocationSetRow rowLocationSetRow = ((LocationSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        CreateDateTime,
                        ModifyDateTime,
                        Description,
                        CreateUser,
                        ModifyUser,
                        IsActive,
                        ZIPcode,
                        City,
                        Country,
                        VATNumber,
                        PhoneNumber,
                        EMail,
                        PreferredCurrency,
                        null,
                        AdressLine1,
                        AdressLine2,
                        AdressLine3,
                        InvoiceAddress,
                        InvoiceFooter,
                        InvoicePrintLogo,
                        DefaultVATPercentage,
                        DefaultHourlyRate,
                        DefaultWeighingTariff,
                        MaterialForDirtId,
                        MaterialForWorkId,
                        CashLedgerId,
                        BankLedgerId,
                        InvoiceFooterPerPage,
                        CompanyLogoImage,
                        CompanyMembershipsLogo,
                        DefaultWeighingTariffBookingCode_Id,
                        RelationSale_Id,
                        RelationBuy_Id,
                        DefaultBailPriceBookingCode_Id,
                        VIHBCode,
                        ContactPerson};
                rowLocationSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLocationSetRow);
                return rowLocationSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow FindById(System.Guid Id) {
                return ((LocationSetRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LocationSetDataTable cln = ((LocationSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LocationSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnModifyDateTime = base.Columns["ModifyDateTime"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreateUser = base.Columns["CreateUser"];
                this.columnModifyUser = base.Columns["ModifyUser"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnZIPcode = base.Columns["ZIPcode"];
                this.columnCity = base.Columns["City"];
                this.columnCountry = base.Columns["Country"];
                this.columnVATNumber = base.Columns["VATNumber"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnEMail = base.Columns["EMail"];
                this.columnPreferredCurrency = base.Columns["PreferredCurrency"];
                this.columnLocationNumber = base.Columns["LocationNumber"];
                this.columnAdressLine1 = base.Columns["AdressLine1"];
                this.columnAdressLine2 = base.Columns["AdressLine2"];
                this.columnAdressLine3 = base.Columns["AdressLine3"];
                this.columnInvoiceAddress = base.Columns["InvoiceAddress"];
                this.columnInvoiceFooter = base.Columns["InvoiceFooter"];
                this.columnInvoicePrintLogo = base.Columns["InvoicePrintLogo"];
                this.columnDefaultVATPercentage = base.Columns["DefaultVATPercentage"];
                this.columnDefaultHourlyRate = base.Columns["DefaultHourlyRate"];
                this.columnDefaultWeighingTariff = base.Columns["DefaultWeighingTariff"];
                this.columnMaterialForDirtId = base.Columns["MaterialForDirtId"];
                this.columnMaterialForWorkId = base.Columns["MaterialForWorkId"];
                this.columnCashLedgerId = base.Columns["CashLedgerId"];
                this.columnBankLedgerId = base.Columns["BankLedgerId"];
                this.columnInvoiceFooterPerPage = base.Columns["InvoiceFooterPerPage"];
                this.columnCompanyLogoImage = base.Columns["CompanyLogoImage"];
                this.columnCompanyMembershipsLogo = base.Columns["CompanyMembershipsLogo"];
                this.columnDefaultWeighingTariffBookingCode_Id = base.Columns["DefaultWeighingTariffBookingCode_Id"];
                this.columnRelationSale_Id = base.Columns["RelationSale_Id"];
                this.columnRelationBuy_Id = base.Columns["RelationBuy_Id"];
                this.columnDefaultBailPriceBookingCode_Id = base.Columns["DefaultBailPriceBookingCode_Id"];
                this.columnVIHBCode = base.Columns["VIHBCode"];
                this.columnContactPerson = base.Columns["ContactPerson"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnModifyDateTime = new global::System.Data.DataColumn("ModifyDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDateTime);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreateUser = new global::System.Data.DataColumn("CreateUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUser);
                this.columnModifyUser = new global::System.Data.DataColumn("ModifyUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyUser);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnZIPcode = new global::System.Data.DataColumn("ZIPcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIPcode);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnVATNumber = new global::System.Data.DataColumn("VATNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATNumber);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnEMail = new global::System.Data.DataColumn("EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail);
                this.columnPreferredCurrency = new global::System.Data.DataColumn("PreferredCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreferredCurrency);
                this.columnLocationNumber = new global::System.Data.DataColumn("LocationNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationNumber);
                this.columnAdressLine1 = new global::System.Data.DataColumn("AdressLine1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine1);
                this.columnAdressLine2 = new global::System.Data.DataColumn("AdressLine2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine2);
                this.columnAdressLine3 = new global::System.Data.DataColumn("AdressLine3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine3);
                this.columnInvoiceAddress = new global::System.Data.DataColumn("InvoiceAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddress);
                this.columnInvoiceFooter = new global::System.Data.DataColumn("InvoiceFooter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFooter);
                this.columnInvoicePrintLogo = new global::System.Data.DataColumn("InvoicePrintLogo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePrintLogo);
                this.columnDefaultVATPercentage = new global::System.Data.DataColumn("DefaultVATPercentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultVATPercentage);
                this.columnDefaultHourlyRate = new global::System.Data.DataColumn("DefaultHourlyRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultHourlyRate);
                this.columnDefaultWeighingTariff = new global::System.Data.DataColumn("DefaultWeighingTariff", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultWeighingTariff);
                this.columnMaterialForDirtId = new global::System.Data.DataColumn("MaterialForDirtId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialForDirtId);
                this.columnMaterialForWorkId = new global::System.Data.DataColumn("MaterialForWorkId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialForWorkId);
                this.columnCashLedgerId = new global::System.Data.DataColumn("CashLedgerId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashLedgerId);
                this.columnBankLedgerId = new global::System.Data.DataColumn("BankLedgerId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankLedgerId);
                this.columnInvoiceFooterPerPage = new global::System.Data.DataColumn("InvoiceFooterPerPage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFooterPerPage);
                this.columnCompanyLogoImage = new global::System.Data.DataColumn("CompanyLogoImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyLogoImage);
                this.columnCompanyMembershipsLogo = new global::System.Data.DataColumn("CompanyMembershipsLogo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyMembershipsLogo);
                this.columnDefaultWeighingTariffBookingCode_Id = new global::System.Data.DataColumn("DefaultWeighingTariffBookingCode_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultWeighingTariffBookingCode_Id);
                this.columnRelationSale_Id = new global::System.Data.DataColumn("RelationSale_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationSale_Id);
                this.columnRelationBuy_Id = new global::System.Data.DataColumn("RelationBuy_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationBuy_Id);
                this.columnDefaultBailPriceBookingCode_Id = new global::System.Data.DataColumn("DefaultBailPriceBookingCode_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultBailPriceBookingCode_Id);
                this.columnVIHBCode = new global::System.Data.DataColumn("VIHBCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIHBCode);
                this.columnContactPerson = new global::System.Data.DataColumn("ContactPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPerson);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnCreateDateTime.AllowDBNull = false;
                this.columnModifyDateTime.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 250;
                this.columnCreateUser.AllowDBNull = false;
                this.columnModifyUser.AllowDBNull = false;
                this.columnIsActive.AllowDBNull = false;
                this.columnZIPcode.AllowDBNull = false;
                this.columnZIPcode.MaxLength = 20;
                this.columnCity.AllowDBNull = false;
                this.columnCity.MaxLength = 100;
                this.columnCountry.AllowDBNull = false;
                this.columnCountry.MaxLength = 100;
                this.columnVATNumber.AllowDBNull = false;
                this.columnVATNumber.MaxLength = 40;
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 40;
                this.columnEMail.AllowDBNull = false;
                this.columnEMail.MaxLength = 40;
                this.columnPreferredCurrency.AllowDBNull = false;
                this.columnPreferredCurrency.MaxLength = 3;
                this.columnLocationNumber.AutoIncrement = true;
                this.columnLocationNumber.AutoIncrementSeed = -1;
                this.columnLocationNumber.AutoIncrementStep = -1;
                this.columnLocationNumber.AllowDBNull = false;
                this.columnLocationNumber.ReadOnly = true;
                this.columnAdressLine1.AllowDBNull = false;
                this.columnAdressLine1.MaxLength = 250;
                this.columnAdressLine2.AllowDBNull = false;
                this.columnAdressLine2.MaxLength = 250;
                this.columnAdressLine3.AllowDBNull = false;
                this.columnAdressLine3.MaxLength = 250;
                this.columnInvoiceAddress.AllowDBNull = false;
                this.columnInvoiceAddress.MaxLength = 250;
                this.columnInvoiceFooter.AllowDBNull = false;
                this.columnInvoiceFooter.MaxLength = 250;
                this.columnInvoicePrintLogo.AllowDBNull = false;
                this.columnDefaultVATPercentage.AllowDBNull = false;
                this.columnDefaultHourlyRate.AllowDBNull = false;
                this.columnDefaultWeighingTariff.AllowDBNull = false;
                this.columnInvoiceFooterPerPage.AllowDBNull = false;
                this.columnInvoiceFooterPerPage.MaxLength = 250;
                this.columnDefaultBailPriceBookingCode_Id.AllowDBNull = false;
                this.columnVIHBCode.AllowDBNull = false;
                this.columnVIHBCode.MaxLength = 20;
                this.columnContactPerson.AllowDBNull = false;
                this.columnContactPerson.MaxLength = 40;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow NewLocationSetRow() {
                return ((LocationSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LocationSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LocationSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LocationSetRowChanged != null)) {
                    this.LocationSetRowChanged(this, new LocationSetRowChangeEvent(((LocationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LocationSetRowChanging != null)) {
                    this.LocationSetRowChanging(this, new LocationSetRowChangeEvent(((LocationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LocationSetRowDeleted != null)) {
                    this.LocationSetRowDeleted(this, new LocationSetRowChangeEvent(((LocationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LocationSetRowDeleting != null)) {
                    this.LocationSetRowDeleting(this, new LocationSetRowChangeEvent(((LocationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLocationSetRow(LocationSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetOnlyInvoices ds = new DataSetOnlyInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LocationSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InvoiceSetRow : global::System.Data.DataRow {
            
            private InvoiceSetDataTable tableInvoiceSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InvoiceSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInvoiceSet = ((InvoiceSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableInvoiceSet.IdColumn]));
                }
                set {
                    this[this.tableInvoiceSet.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableInvoiceSet.CreateDateTimeColumn]));
                }
                set {
                    this[this.tableInvoiceSet.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifyDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableInvoiceSet.ModifyDateTimeColumn]));
                }
                set {
                    this[this.tableInvoiceSet.ModifyDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableInvoiceSet.DescriptionColumn]));
                }
                set {
                    this[this.tableInvoiceSet.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreateUser {
                get {
                    return ((global::System.Guid)(this[this.tableInvoiceSet.CreateUserColumn]));
                }
                set {
                    this[this.tableInvoiceSet.CreateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ModifyUser {
                get {
                    return ((global::System.Guid)(this[this.tableInvoiceSet.ModifyUserColumn]));
                }
                set {
                    this[this.tableInvoiceSet.ModifyUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InvoiceNumber {
                get {
                    return ((long)(this[this.tableInvoiceSet.InvoiceNumberColumn]));
                }
                set {
                    this[this.tableInvoiceSet.InvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceStatus {
                get {
                    return ((string)(this[this.tableInvoiceSet.InvoiceStatusColumn]));
                }
                set {
                    this[this.tableInvoiceSet.InvoiceStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceType {
                get {
                    return ((string)(this[this.tableInvoiceSet.InvoiceTypeColumn]));
                }
                set {
                    this[this.tableInvoiceSet.InvoiceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BookingDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableInvoiceSet.BookingDateTimeColumn]));
                }
                set {
                    this[this.tableInvoiceSet.BookingDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string YourReference {
                get {
                    return ((string)(this[this.tableInvoiceSet.YourReferenceColumn]));
                }
                set {
                    this[this.tableInvoiceSet.YourReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Price {
                get {
                    return ((double)(this[this.tableInvoiceSet.PriceColumn]));
                }
                set {
                    this[this.tableInvoiceSet.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VATPrice {
                get {
                    return ((double)(this[this.tableInvoiceSet.VATPriceColumn]));
                }
                set {
                    this[this.tableInvoiceSet.VATPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalPrice {
                get {
                    return ((double)(this[this.tableInvoiceSet.TotalPriceColumn]));
                }
                set {
                    this[this.tableInvoiceSet.TotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceNote {
                get {
                    return ((string)(this[this.tableInvoiceSet.InvoiceNoteColumn]));
                }
                set {
                    this[this.tableInvoiceSet.InvoiceNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Ledger_Id {
                get {
                    return ((global::System.Guid)(this[this.tableInvoiceSet.Ledger_IdColumn]));
                }
                set {
                    this[this.tableInvoiceSet.Ledger_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Relation_Id {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableInvoiceSet.Relation_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Relation_Id\' in table \'InvoiceSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceSet.Relation_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Location_Id {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableInvoiceSet.Location_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_Id\' in table \'InvoiceSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceSet.Location_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCorrected {
                get {
                    return ((bool)(this[this.tableInvoiceSet.IsCorrectedColumn]));
                }
                set {
                    this[this.tableInvoiceSet.IsCorrectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid GroupCode {
                get {
                    return ((global::System.Guid)(this[this.tableInvoiceSet.GroupCodeColumn]));
                }
                set {
                    this[this.tableInvoiceSet.GroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DiscountPercentage {
                get {
                    return ((double)(this[this.tableInvoiceSet.DiscountPercentageColumn]));
                }
                set {
                    this[this.tableInvoiceSet.DiscountPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceSubType {
                get {
                    return ((string)(this[this.tableInvoiceSet.InvoiceSubTypeColumn]));
                }
                set {
                    this[this.tableInvoiceSet.InvoiceSubTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AlreadyPaid {
                get {
                    return ((double)(this[this.tableInvoiceSet.AlreadyPaidColumn]));
                }
                set {
                    this[this.tableInvoiceSet.AlreadyPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PriceWithoutDiscount {
                get {
                    return ((double)(this[this.tableInvoiceSet.PriceWithoutDiscountColumn]));
                }
                set {
                    this[this.tableInvoiceSet.PriceWithoutDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LocationSetDescription {
                get {
                    return ((string)(this[this.tableInvoiceSet.LocationSetDescriptionColumn]));
                }
                set {
                    this[this.tableInvoiceSet.LocationSetDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RelationSetDescription {
                get {
                    return ((string)(this[this.tableInvoiceSet.RelationSetDescriptionColumn]));
                }
                set {
                    this[this.tableInvoiceSet.RelationSetDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CustomerNumber {
                get {
                    return ((long)(this[this.tableInvoiceSet.CustomerNumberColumn]));
                }
                set {
                    this[this.tableInvoiceSet.CustomerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RelationSetId {
                get {
                    return ((global::System.Guid)(this[this.tableInvoiceSet.RelationSetIdColumn]));
                }
                set {
                    this[this.tableInvoiceSet.RelationSetIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tableInvoiceSet.PhoneNumberColumn]));
                }
                set {
                    this[this.tableInvoiceSet.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VATNumber {
                get {
                    return ((string)(this[this.tableInvoiceSet.VATNumberColumn]));
                }
                set {
                    this[this.tableInvoiceSet.VATNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMail {
                get {
                    return ((string)(this[this.tableInvoiceSet.EMailColumn]));
                }
                set {
                    this[this.tableInvoiceSet.EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerType {
                get {
                    return ((string)(this[this.tableInvoiceSet.CustomerTypeColumn]));
                }
                set {
                    this[this.tableInvoiceSet.CustomerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PreferredCurrency {
                get {
                    return ((string)(this[this.tableInvoiceSet.PreferredCurrencyColumn]));
                }
                set {
                    this[this.tableInvoiceSet.PreferredCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FaxNumber {
                get {
                    return ((string)(this[this.tableInvoiceSet.FaxNumberColumn]));
                }
                set {
                    this[this.tableInvoiceSet.FaxNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    return ((string)(this[this.tableInvoiceSet.CountryColumn]));
                }
                set {
                    this[this.tableInvoiceSet.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RelationSetYourReference {
                get {
                    return ((string)(this[this.tableInvoiceSet.RelationSetYourReferenceColumn]));
                }
                set {
                    this[this.tableInvoiceSet.RelationSetYourReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRelation_IdNull() {
                return this.IsNull(this.tableInvoiceSet.Relation_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRelation_IdNull() {
                this[this.tableInvoiceSet.Relation_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocation_IdNull() {
                return this.IsNull(this.tableInvoiceSet.Location_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocation_IdNull() {
                this[this.tableInvoiceSet.Location_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RelationAddressSetRow : global::System.Data.DataRow {
            
            private RelationAddressSetDataTable tableRelationAddressSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RelationAddressSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelationAddressSet = ((RelationAddressSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableRelationAddressSet.IdColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRelationAddressSet.CreateDateTimeColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifyDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRelationAddressSet.ModifyDateTimeColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.ModifyDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableRelationAddressSet.DescriptionColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comments {
                get {
                    return ((string)(this[this.tableRelationAddressSet.CommentsColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreateUser {
                get {
                    return ((global::System.Guid)(this[this.tableRelationAddressSet.CreateUserColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.CreateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ModifyUser {
                get {
                    return ((global::System.Guid)(this[this.tableRelationAddressSet.ModifyUserColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.ModifyUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine1 {
                get {
                    return ((string)(this[this.tableRelationAddressSet.AdressLine1Column]));
                }
                set {
                    this[this.tableRelationAddressSet.AdressLine1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine2 {
                get {
                    return ((string)(this[this.tableRelationAddressSet.AdressLine2Column]));
                }
                set {
                    this[this.tableRelationAddressSet.AdressLine2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine3 {
                get {
                    return ((string)(this[this.tableRelationAddressSet.AdressLine3Column]));
                }
                set {
                    this[this.tableRelationAddressSet.AdressLine3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ZIPcode {
                get {
                    return ((string)(this[this.tableRelationAddressSet.ZIPcodeColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.ZIPcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    return ((string)(this[this.tableRelationAddressSet.CityColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    return ((string)(this[this.tableRelationAddressSet.CountryColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableRelationAddressSet.IsActiveColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Relation_Id {
                get {
                    return ((global::System.Guid)(this[this.tableRelationAddressSet.Relation_IdColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.Relation_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressType {
                get {
                    return ((string)(this[this.tableRelationAddressSet.AdressTypeColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.AdressTypeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LocationSetRow : global::System.Data.DataRow {
            
            private LocationSetDataTable tableLocationSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LocationSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLocationSet = ((LocationSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableLocationSet.IdColumn]));
                }
                set {
                    this[this.tableLocationSet.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableLocationSet.CreateDateTimeColumn]));
                }
                set {
                    this[this.tableLocationSet.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifyDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableLocationSet.ModifyDateTimeColumn]));
                }
                set {
                    this[this.tableLocationSet.ModifyDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableLocationSet.DescriptionColumn]));
                }
                set {
                    this[this.tableLocationSet.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreateUser {
                get {
                    return ((global::System.Guid)(this[this.tableLocationSet.CreateUserColumn]));
                }
                set {
                    this[this.tableLocationSet.CreateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ModifyUser {
                get {
                    return ((global::System.Guid)(this[this.tableLocationSet.ModifyUserColumn]));
                }
                set {
                    this[this.tableLocationSet.ModifyUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableLocationSet.IsActiveColumn]));
                }
                set {
                    this[this.tableLocationSet.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ZIPcode {
                get {
                    return ((string)(this[this.tableLocationSet.ZIPcodeColumn]));
                }
                set {
                    this[this.tableLocationSet.ZIPcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    return ((string)(this[this.tableLocationSet.CityColumn]));
                }
                set {
                    this[this.tableLocationSet.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    return ((string)(this[this.tableLocationSet.CountryColumn]));
                }
                set {
                    this[this.tableLocationSet.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VATNumber {
                get {
                    return ((string)(this[this.tableLocationSet.VATNumberColumn]));
                }
                set {
                    this[this.tableLocationSet.VATNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tableLocationSet.PhoneNumberColumn]));
                }
                set {
                    this[this.tableLocationSet.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMail {
                get {
                    return ((string)(this[this.tableLocationSet.EMailColumn]));
                }
                set {
                    this[this.tableLocationSet.EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PreferredCurrency {
                get {
                    return ((string)(this[this.tableLocationSet.PreferredCurrencyColumn]));
                }
                set {
                    this[this.tableLocationSet.PreferredCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long LocationNumber {
                get {
                    return ((long)(this[this.tableLocationSet.LocationNumberColumn]));
                }
                set {
                    this[this.tableLocationSet.LocationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine1 {
                get {
                    return ((string)(this[this.tableLocationSet.AdressLine1Column]));
                }
                set {
                    this[this.tableLocationSet.AdressLine1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine2 {
                get {
                    return ((string)(this[this.tableLocationSet.AdressLine2Column]));
                }
                set {
                    this[this.tableLocationSet.AdressLine2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine3 {
                get {
                    return ((string)(this[this.tableLocationSet.AdressLine3Column]));
                }
                set {
                    this[this.tableLocationSet.AdressLine3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceAddress {
                get {
                    return ((string)(this[this.tableLocationSet.InvoiceAddressColumn]));
                }
                set {
                    this[this.tableLocationSet.InvoiceAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceFooter {
                get {
                    return ((string)(this[this.tableLocationSet.InvoiceFooterColumn]));
                }
                set {
                    this[this.tableLocationSet.InvoiceFooterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool InvoicePrintLogo {
                get {
                    return ((bool)(this[this.tableLocationSet.InvoicePrintLogoColumn]));
                }
                set {
                    this[this.tableLocationSet.InvoicePrintLogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DefaultVATPercentage {
                get {
                    return ((double)(this[this.tableLocationSet.DefaultVATPercentageColumn]));
                }
                set {
                    this[this.tableLocationSet.DefaultVATPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DefaultHourlyRate {
                get {
                    return ((double)(this[this.tableLocationSet.DefaultHourlyRateColumn]));
                }
                set {
                    this[this.tableLocationSet.DefaultHourlyRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DefaultWeighingTariff {
                get {
                    return ((double)(this[this.tableLocationSet.DefaultWeighingTariffColumn]));
                }
                set {
                    this[this.tableLocationSet.DefaultWeighingTariffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid MaterialForDirtId {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.MaterialForDirtIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialForDirtId\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.MaterialForDirtIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid MaterialForWorkId {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.MaterialForWorkIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialForWorkId\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.MaterialForWorkIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CashLedgerId {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.CashLedgerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashLedgerId\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.CashLedgerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid BankLedgerId {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.BankLedgerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankLedgerId\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.BankLedgerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceFooterPerPage {
                get {
                    return ((string)(this[this.tableLocationSet.InvoiceFooterPerPageColumn]));
                }
                set {
                    this[this.tableLocationSet.InvoiceFooterPerPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] CompanyLogoImage {
                get {
                    try {
                        return ((byte[])(this[this.tableLocationSet.CompanyLogoImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyLogoImage\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.CompanyLogoImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] CompanyMembershipsLogo {
                get {
                    try {
                        return ((byte[])(this[this.tableLocationSet.CompanyMembershipsLogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyMembershipsLogo\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.CompanyMembershipsLogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid DefaultWeighingTariffBookingCode_Id {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.DefaultWeighingTariffBookingCode_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultWeighingTariffBookingCode_Id\' in table \'LocationSet\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.DefaultWeighingTariffBookingCode_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RelationSale_Id {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.RelationSale_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationSale_Id\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.RelationSale_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RelationBuy_Id {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.RelationBuy_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationBuy_Id\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.RelationBuy_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid DefaultBailPriceBookingCode_Id {
                get {
                    return ((global::System.Guid)(this[this.tableLocationSet.DefaultBailPriceBookingCode_IdColumn]));
                }
                set {
                    this[this.tableLocationSet.DefaultBailPriceBookingCode_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIHBCode {
                get {
                    return ((string)(this[this.tableLocationSet.VIHBCodeColumn]));
                }
                set {
                    this[this.tableLocationSet.VIHBCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactPerson {
                get {
                    return ((string)(this[this.tableLocationSet.ContactPersonColumn]));
                }
                set {
                    this[this.tableLocationSet.ContactPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialForDirtIdNull() {
                return this.IsNull(this.tableLocationSet.MaterialForDirtIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialForDirtIdNull() {
                this[this.tableLocationSet.MaterialForDirtIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialForWorkIdNull() {
                return this.IsNull(this.tableLocationSet.MaterialForWorkIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialForWorkIdNull() {
                this[this.tableLocationSet.MaterialForWorkIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCashLedgerIdNull() {
                return this.IsNull(this.tableLocationSet.CashLedgerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCashLedgerIdNull() {
                this[this.tableLocationSet.CashLedgerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankLedgerIdNull() {
                return this.IsNull(this.tableLocationSet.BankLedgerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankLedgerIdNull() {
                this[this.tableLocationSet.BankLedgerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompanyLogoImageNull() {
                return this.IsNull(this.tableLocationSet.CompanyLogoImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompanyLogoImageNull() {
                this[this.tableLocationSet.CompanyLogoImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompanyMembershipsLogoNull() {
                return this.IsNull(this.tableLocationSet.CompanyMembershipsLogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompanyMembershipsLogoNull() {
                this[this.tableLocationSet.CompanyMembershipsLogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultWeighingTariffBookingCode_IdNull() {
                return this.IsNull(this.tableLocationSet.DefaultWeighingTariffBookingCode_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultWeighingTariffBookingCode_IdNull() {
                this[this.tableLocationSet.DefaultWeighingTariffBookingCode_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRelationSale_IdNull() {
                return this.IsNull(this.tableLocationSet.RelationSale_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRelationSale_IdNull() {
                this[this.tableLocationSet.RelationSale_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRelationBuy_IdNull() {
                return this.IsNull(this.tableLocationSet.RelationBuy_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRelationBuy_IdNull() {
                this[this.tableLocationSet.RelationBuy_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InvoiceSetRowChangeEvent : global::System.EventArgs {
            
            private InvoiceSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceSetRowChangeEvent(InvoiceSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RelationAddressSetRowChangeEvent : global::System.EventArgs {
            
            private RelationAddressSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRowChangeEvent(RelationAddressSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LocationSetRowChangeEvent : global::System.EventArgs {
            
            private LocationSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRowChangeEvent(LocationSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TMS_Recycling.DataSetOnlyInvoicesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class InvoiceSetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public InvoiceSetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "InvoiceSet";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("CreateDateTime", "CreateDateTime");
            tableMapping.ColumnMappings.Add("ModifyDateTime", "ModifyDateTime");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("CreateUser", "CreateUser");
            tableMapping.ColumnMappings.Add("ModifyUser", "ModifyUser");
            tableMapping.ColumnMappings.Add("InvoiceNumber", "InvoiceNumber");
            tableMapping.ColumnMappings.Add("InvoiceStatus", "InvoiceStatus");
            tableMapping.ColumnMappings.Add("InvoiceType", "InvoiceType");
            tableMapping.ColumnMappings.Add("BookingDateTime", "BookingDateTime");
            tableMapping.ColumnMappings.Add("YourReference", "YourReference");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("VATPrice", "VATPrice");
            tableMapping.ColumnMappings.Add("TotalPrice", "TotalPrice");
            tableMapping.ColumnMappings.Add("InvoiceNote", "InvoiceNote");
            tableMapping.ColumnMappings.Add("Ledger_Id", "Ledger_Id");
            tableMapping.ColumnMappings.Add("Relation_Id", "Relation_Id");
            tableMapping.ColumnMappings.Add("Location_Id", "Location_Id");
            tableMapping.ColumnMappings.Add("IsCorrected", "IsCorrected");
            tableMapping.ColumnMappings.Add("GroupCode", "GroupCode");
            tableMapping.ColumnMappings.Add("DiscountPercentage", "DiscountPercentage");
            tableMapping.ColumnMappings.Add("InvoiceSubType", "InvoiceSubType");
            tableMapping.ColumnMappings.Add("AlreadyPaid", "AlreadyPaid");
            tableMapping.ColumnMappings.Add("PriceWithoutDiscount", "PriceWithoutDiscount");
            tableMapping.ColumnMappings.Add("LocationSetDescription", "LocationSetDescription");
            tableMapping.ColumnMappings.Add("RelationSetDescription", "RelationSetDescription");
            tableMapping.ColumnMappings.Add("CustomerNumber", "CustomerNumber");
            tableMapping.ColumnMappings.Add("RelationSetId", "RelationSetId");
            tableMapping.ColumnMappings.Add("PhoneNumber", "PhoneNumber");
            tableMapping.ColumnMappings.Add("VATNumber", "VATNumber");
            tableMapping.ColumnMappings.Add("EMail", "EMail");
            tableMapping.ColumnMappings.Add("CustomerType", "CustomerType");
            tableMapping.ColumnMappings.Add("PreferredCurrency", "PreferredCurrency");
            tableMapping.ColumnMappings.Add("FaxNumber", "FaxNumber");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("RelationSetYourReference", "RelationSetYourReference");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["TMSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        InvoiceSet.Id, InvoiceSet.CreateDateTime, InvoiceSet.ModifyDateTime" +
                ", InvoiceSet.Description, InvoiceSet.CreateUser, InvoiceSet.ModifyUser, \r\n      " +
                "                   InvoiceSet.InvoiceNumber, InvoiceSet.InvoiceStatus, InvoiceSe" +
                "t.InvoiceType, InvoiceSet.BookingDateTime, InvoiceSet.YourReference, \r\n         " +
                "                InvoiceSet.PriceWithoutDiscount, InvoiceSet.Price, InvoiceSet.VA" +
                "TPrice, InvoiceSet.TotalPrice, InvoiceSet.InvoiceNote, InvoiceSet.Ledger_Id, Inv" +
                "oiceSet.Relation_Id, \r\n                         InvoiceSet.Location_Id, InvoiceS" +
                "et.IsCorrected, InvoiceSet.GroupCode, InvoiceSet.DiscountPercentage, InvoiceSet." +
                "InvoiceSubType, InvoiceSet.AlreadyPaid, \r\n                         LocationSet.D" +
                "escription AS LocationSetDescription, RelationSet.Description AS RelationSetDesc" +
                "ription, RelationSet.CustomerNumber, \r\n                         RelationSet.Id A" +
                "S RelationSetId, RelationSet.PhoneNumber, RelationSet.VATNumber, RelationSet.EMa" +
                "il, RelationSet.YourReference AS RelationSetYourReference,\r\n                    " +
                "     RelationSet.CustomerType, RelationSet.PreferredCurrency, RelationSet.FaxNum" +
                "ber, RelationSet.Country\r\nFROM            InvoiceSet INNER JOIN\r\n               " +
                "          LocationSet ON InvoiceSet.Location_Id = LocationSet.Id INNER JOIN\r\n   " +
                "                      RelationSet ON InvoiceSet.Relation_Id = RelationSet.Id\r\nWH" +
                "ERE        (@CustomerId = RelationSet.Id OR\r\n                         @CustomerI" +
                "d = \'00000000-0000-0000-0000-000000000000\') AND (@LocationName = LocationSet.Des" +
                "cription OR\r\n                         @LocationName = \'\') AND (InvoiceSet.Bookin" +
                "gDateTime BETWEEN @StartDate AND @EndDate) AND (InvoiceSet.InvoiceType = @Invoic" +
                "eType OR\r\n                         @InvoiceType = \'\') AND (InvoiceSet.InvoiceSta" +
                "tus = @InvoiceStatus OR\r\n                         @InvoiceStatus = \'\') and\r\n(Inv" +
                "oiceSubType = @InvoiceSubType or @InvoiceSubType = \'\')";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerId", global::System.Data.SqlDbType.UniqueIdentifier, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationName", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BookingDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BookingDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceType", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceStatus", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceSubType", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceSubType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetOnlyInvoices.InvoiceSetDataTable dataTable, System.Guid CustomerId, string LocationName, System.DateTime StartDate, System.DateTime EndDate, string InvoiceType, string InvoiceStatus, string InvoiceSubType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(CustomerId));
            if ((LocationName == null)) {
                throw new global::System.ArgumentNullException("LocationName");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LocationName));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(StartDate));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(EndDate));
            if ((InvoiceType == null)) {
                throw new global::System.ArgumentNullException("InvoiceType");
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(InvoiceType));
            }
            if ((InvoiceStatus == null)) {
                throw new global::System.ArgumentNullException("InvoiceStatus");
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(InvoiceStatus));
            }
            if ((InvoiceSubType == null)) {
                throw new global::System.ArgumentNullException("InvoiceSubType");
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(InvoiceSubType));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetOnlyInvoices.InvoiceSetDataTable GetData(System.Guid CustomerId, string LocationName, System.DateTime StartDate, System.DateTime EndDate, string InvoiceType, string InvoiceStatus, string InvoiceSubType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(CustomerId));
            if ((LocationName == null)) {
                throw new global::System.ArgumentNullException("LocationName");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LocationName));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(StartDate));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(EndDate));
            if ((InvoiceType == null)) {
                throw new global::System.ArgumentNullException("InvoiceType");
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(InvoiceType));
            }
            if ((InvoiceStatus == null)) {
                throw new global::System.ArgumentNullException("InvoiceStatus");
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(InvoiceStatus));
            }
            if ((InvoiceSubType == null)) {
                throw new global::System.ArgumentNullException("InvoiceSubType");
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(InvoiceSubType));
            }
            DataSetOnlyInvoices.InvoiceSetDataTable dataTable = new DataSetOnlyInvoices.InvoiceSetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RelationAddressSetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RelationAddressSetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RelationAddressSet";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("CreateDateTime", "CreateDateTime");
            tableMapping.ColumnMappings.Add("ModifyDateTime", "ModifyDateTime");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("CreateUser", "CreateUser");
            tableMapping.ColumnMappings.Add("ModifyUser", "ModifyUser");
            tableMapping.ColumnMappings.Add("AdressLine1", "AdressLine1");
            tableMapping.ColumnMappings.Add("AdressLine2", "AdressLine2");
            tableMapping.ColumnMappings.Add("AdressLine3", "AdressLine3");
            tableMapping.ColumnMappings.Add("ZIPcode", "ZIPcode");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("Relation_Id", "Relation_Id");
            tableMapping.ColumnMappings.Add("AdressType", "AdressType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["TMSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        RelationAddressSet.Id, RelationAddressSet.CreateDateTime, RelationAddressSet.ModifyDateTime, RelationAddressSet.Description, RelationAddressSet.Comments, 
                         RelationAddressSet.CreateUser, RelationAddressSet.ModifyUser, RelationAddressSet.AdressLine1, RelationAddressSet.AdressLine2, 
                         RelationAddressSet.AdressLine3, RelationAddressSet.ZIPcode, RelationAddressSet.City, RelationAddressSet.Country, RelationAddressSet.IsActive, 
                         RelationAddressSet.Relation_Id, RelationAddressSet.AdressType
FROM            RelationAddressSet INNER JOIN
                         RelationSet ON RelationAddressSet.Relation_Id = RelationSet.Id
WHERE        (RelationAddressSet.AdressType = 'Invoice') AND (RelationSet.Id = @CustomerId)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerId", global::System.Data.SqlDbType.UniqueIdentifier, 16, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetOnlyInvoices.RelationAddressSetDataTable dataTable, System.Guid CustomerId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(CustomerId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetOnlyInvoices.RelationAddressSetDataTable GetData(System.Guid CustomerId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(CustomerId));
            DataSetOnlyInvoices.RelationAddressSetDataTable dataTable = new DataSetOnlyInvoices.RelationAddressSetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LocationSetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LocationSetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LocationSet";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("CreateDateTime", "CreateDateTime");
            tableMapping.ColumnMappings.Add("ModifyDateTime", "ModifyDateTime");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("CreateUser", "CreateUser");
            tableMapping.ColumnMappings.Add("ModifyUser", "ModifyUser");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("ZIPcode", "ZIPcode");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("VATNumber", "VATNumber");
            tableMapping.ColumnMappings.Add("PhoneNumber", "PhoneNumber");
            tableMapping.ColumnMappings.Add("EMail", "EMail");
            tableMapping.ColumnMappings.Add("PreferredCurrency", "PreferredCurrency");
            tableMapping.ColumnMappings.Add("LocationNumber", "LocationNumber");
            tableMapping.ColumnMappings.Add("AdressLine1", "AdressLine1");
            tableMapping.ColumnMappings.Add("AdressLine2", "AdressLine2");
            tableMapping.ColumnMappings.Add("AdressLine3", "AdressLine3");
            tableMapping.ColumnMappings.Add("InvoiceAddress", "InvoiceAddress");
            tableMapping.ColumnMappings.Add("InvoiceFooter", "InvoiceFooter");
            tableMapping.ColumnMappings.Add("InvoicePrintLogo", "InvoicePrintLogo");
            tableMapping.ColumnMappings.Add("DefaultVATPercentage", "DefaultVATPercentage");
            tableMapping.ColumnMappings.Add("DefaultHourlyRate", "DefaultHourlyRate");
            tableMapping.ColumnMappings.Add("DefaultWeighingTariff", "DefaultWeighingTariff");
            tableMapping.ColumnMappings.Add("MaterialForDirtId", "MaterialForDirtId");
            tableMapping.ColumnMappings.Add("MaterialForWorkId", "MaterialForWorkId");
            tableMapping.ColumnMappings.Add("CashLedgerId", "CashLedgerId");
            tableMapping.ColumnMappings.Add("BankLedgerId", "BankLedgerId");
            tableMapping.ColumnMappings.Add("InvoiceFooterPerPage", "InvoiceFooterPerPage");
            tableMapping.ColumnMappings.Add("CompanyLogoImage", "CompanyLogoImage");
            tableMapping.ColumnMappings.Add("CompanyMembershipsLogo", "CompanyMembershipsLogo");
            tableMapping.ColumnMappings.Add("DefaultWeighingTariffBookingCode_Id", "DefaultWeighingTariffBookingCode_Id");
            tableMapping.ColumnMappings.Add("RelationSale_Id", "RelationSale_Id");
            tableMapping.ColumnMappings.Add("RelationBuy_Id", "RelationBuy_Id");
            tableMapping.ColumnMappings.Add("DefaultBailPriceBookingCode_Id", "DefaultBailPriceBookingCode_Id");
            tableMapping.ColumnMappings.Add("VIHBCode", "VIHBCode");
            tableMapping.ColumnMappings.Add("ContactPerson", "ContactPerson");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["TMSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Id, CreateDateTime, ModifyDateTime, Description, CreateUser, ModifyUser, IsActive, ZIPcode, City, Country, VATNumber, PhoneNumber, EMail, PreferredCurrency, 
                         LocationNumber, AdressLine1, AdressLine2, AdressLine3, InvoiceAddress, InvoiceFooter, InvoicePrintLogo, DefaultVATPercentage, DefaultHourlyRate, 
                         DefaultWeighingTariff, MaterialForDirtId, MaterialForWorkId, CashLedgerId, BankLedgerId, InvoiceFooterPerPage, CompanyLogoImage, CompanyMembershipsLogo, 
                         DefaultWeighingTariffBookingCode_Id, RelationSale_Id, RelationBuy_Id, DefaultBailPriceBookingCode_Id, VIHBCode, ContactPerson
FROM            LocationSet
WHERE        (IsActive = 1)
ORDER BY LocationNumber";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetOnlyInvoices.LocationSetDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetOnlyInvoices.LocationSetDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetOnlyInvoices.LocationSetDataTable dataTable = new DataSetOnlyInvoices.LocationSetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSetOnlyInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSetOnlyInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSetOnlyInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSetOnlyInvoices dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591