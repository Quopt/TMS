//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TMS_Recycling {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetRelationWork")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetRelationWork : global::System.Data.DataSet {
        
        private RelationSetDataTable tableRelationSet;
        
        private RelationAddressSetDataTable tableRelationAddressSet;
        
        private LocationSetDataTable tableLocationSet;
        
        private RelationWorkSetDataTable tableRelationWorkSet;
        
        private global::System.Data.DataRelation relationRelationRelationAdress;
        
        private global::System.Data.DataRelation relationLocationRelation;
        
        private global::System.Data.DataRelation relationLocationRelation1;
        
        private global::System.Data.DataRelation relationRelationRelationWork;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetRelationWork() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSetRelationWork(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["RelationSet"] != null)) {
                    base.Tables.Add(new RelationSetDataTable(ds.Tables["RelationSet"]));
                }
                if ((ds.Tables["RelationAddressSet"] != null)) {
                    base.Tables.Add(new RelationAddressSetDataTable(ds.Tables["RelationAddressSet"]));
                }
                if ((ds.Tables["LocationSet"] != null)) {
                    base.Tables.Add(new LocationSetDataTable(ds.Tables["LocationSet"]));
                }
                if ((ds.Tables["RelationWorkSet"] != null)) {
                    base.Tables.Add(new RelationWorkSetDataTable(ds.Tables["RelationWorkSet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelationSetDataTable RelationSet {
            get {
                return this.tableRelationSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelationAddressSetDataTable RelationAddressSet {
            get {
                return this.tableRelationAddressSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LocationSetDataTable LocationSet {
            get {
                return this.tableLocationSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelationWorkSetDataTable RelationWorkSet {
            get {
                return this.tableRelationWorkSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetRelationWork cln = ((DataSetRelationWork)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["RelationSet"] != null)) {
                    base.Tables.Add(new RelationSetDataTable(ds.Tables["RelationSet"]));
                }
                if ((ds.Tables["RelationAddressSet"] != null)) {
                    base.Tables.Add(new RelationAddressSetDataTable(ds.Tables["RelationAddressSet"]));
                }
                if ((ds.Tables["LocationSet"] != null)) {
                    base.Tables.Add(new LocationSetDataTable(ds.Tables["LocationSet"]));
                }
                if ((ds.Tables["RelationWorkSet"] != null)) {
                    base.Tables.Add(new RelationWorkSetDataTable(ds.Tables["RelationWorkSet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableRelationSet = ((RelationSetDataTable)(base.Tables["RelationSet"]));
            if ((initTable == true)) {
                if ((this.tableRelationSet != null)) {
                    this.tableRelationSet.InitVars();
                }
            }
            this.tableRelationAddressSet = ((RelationAddressSetDataTable)(base.Tables["RelationAddressSet"]));
            if ((initTable == true)) {
                if ((this.tableRelationAddressSet != null)) {
                    this.tableRelationAddressSet.InitVars();
                }
            }
            this.tableLocationSet = ((LocationSetDataTable)(base.Tables["LocationSet"]));
            if ((initTable == true)) {
                if ((this.tableLocationSet != null)) {
                    this.tableLocationSet.InitVars();
                }
            }
            this.tableRelationWorkSet = ((RelationWorkSetDataTable)(base.Tables["RelationWorkSet"]));
            if ((initTable == true)) {
                if ((this.tableRelationWorkSet != null)) {
                    this.tableRelationWorkSet.InitVars();
                }
            }
            this.relationRelationRelationAdress = this.Relations["RelationRelationAdress"];
            this.relationLocationRelation = this.Relations["LocationRelation"];
            this.relationLocationRelation1 = this.Relations["LocationRelation1"];
            this.relationRelationRelationWork = this.Relations["RelationRelationWork"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetRelationWork";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetRelationWork.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRelationSet = new RelationSetDataTable();
            base.Tables.Add(this.tableRelationSet);
            this.tableRelationAddressSet = new RelationAddressSetDataTable();
            base.Tables.Add(this.tableRelationAddressSet);
            this.tableLocationSet = new LocationSetDataTable();
            base.Tables.Add(this.tableLocationSet);
            this.tableRelationWorkSet = new RelationWorkSetDataTable();
            base.Tables.Add(this.tableRelationWorkSet);
            this.relationRelationRelationAdress = new global::System.Data.DataRelation("RelationRelationAdress", new global::System.Data.DataColumn[] {
                        this.tableRelationSet.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableRelationAddressSet.Relation_IdColumn}, false);
            this.Relations.Add(this.relationRelationRelationAdress);
            this.relationLocationRelation = new global::System.Data.DataRelation("LocationRelation", new global::System.Data.DataColumn[] {
                        this.tableRelationSet.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableLocationSet.RelationSale_IdColumn}, false);
            this.Relations.Add(this.relationLocationRelation);
            this.relationLocationRelation1 = new global::System.Data.DataRelation("LocationRelation1", new global::System.Data.DataColumn[] {
                        this.tableRelationSet.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableLocationSet.RelationBuy_IdColumn}, false);
            this.Relations.Add(this.relationLocationRelation1);
            this.relationRelationRelationWork = new global::System.Data.DataRelation("RelationRelationWork", new global::System.Data.DataColumn[] {
                        this.tableRelationSet.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableRelationWorkSet.Relation_IdColumn}, false);
            this.Relations.Add(this.relationRelationRelationWork);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRelationSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRelationAddressSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLocationSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRelationWorkSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetRelationWork ds = new DataSetRelationWork();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RelationSetRowChangeEventHandler(object sender, RelationSetRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RelationAddressSetRowChangeEventHandler(object sender, RelationAddressSetRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LocationSetRowChangeEventHandler(object sender, LocationSetRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RelationWorkSetRowChangeEventHandler(object sender, RelationWorkSetRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelationSetDataTable : global::System.Data.TypedTableBase<RelationSetRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnModifyDateTime;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreateUser;
            
            private global::System.Data.DataColumn columnModifyUser;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnVATNumber;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnEMail;
            
            private global::System.Data.DataColumn columnYourReference;
            
            private global::System.Data.DataColumn columnCustomerNumber;
            
            private global::System.Data.DataColumn columnCustomerType;
            
            private global::System.Data.DataColumn columnPreferredCurrency;
            
            private global::System.Data.DataColumn columnIsSystemUser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetDataTable() {
                this.TableName = "RelationSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RelationSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RelationSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyDateTimeColumn {
                get {
                    return this.columnModifyDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateUserColumn {
                get {
                    return this.columnCreateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyUserColumn {
                get {
                    return this.columnModifyUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VATNumberColumn {
                get {
                    return this.columnVATNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailColumn {
                get {
                    return this.columnEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YourReferenceColumn {
                get {
                    return this.columnYourReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerNumberColumn {
                get {
                    return this.columnCustomerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerTypeColumn {
                get {
                    return this.columnCustomerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreferredCurrencyColumn {
                get {
                    return this.columnPreferredCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSystemUserColumn {
                get {
                    return this.columnIsSystemUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetRow this[int index] {
                get {
                    return ((RelationSetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationSetRowChangeEventHandler RelationSetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationSetRowChangeEventHandler RelationSetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationSetRowChangeEventHandler RelationSetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationSetRowChangeEventHandler RelationSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRelationSetRow(RelationSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetRow AddRelationSetRow(System.Guid Id, System.DateTime CreateDateTime, System.DateTime ModifyDateTime, string Description, System.Guid CreateUser, System.Guid ModifyUser, bool IsActive, string VATNumber, string PhoneNumber, string EMail, string YourReference, string CustomerType, string PreferredCurrency, bool IsSystemUser) {
                RelationSetRow rowRelationSetRow = ((RelationSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        CreateDateTime,
                        ModifyDateTime,
                        Description,
                        CreateUser,
                        ModifyUser,
                        IsActive,
                        VATNumber,
                        PhoneNumber,
                        EMail,
                        YourReference,
                        null,
                        CustomerType,
                        PreferredCurrency,
                        IsSystemUser};
                rowRelationSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelationSetRow);
                return rowRelationSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetRow FindById(System.Guid Id) {
                return ((RelationSetRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RelationSetDataTable cln = ((RelationSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RelationSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnModifyDateTime = base.Columns["ModifyDateTime"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreateUser = base.Columns["CreateUser"];
                this.columnModifyUser = base.Columns["ModifyUser"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnVATNumber = base.Columns["VATNumber"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnEMail = base.Columns["EMail"];
                this.columnYourReference = base.Columns["YourReference"];
                this.columnCustomerNumber = base.Columns["CustomerNumber"];
                this.columnCustomerType = base.Columns["CustomerType"];
                this.columnPreferredCurrency = base.Columns["PreferredCurrency"];
                this.columnIsSystemUser = base.Columns["IsSystemUser"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnModifyDateTime = new global::System.Data.DataColumn("ModifyDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDateTime);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreateUser = new global::System.Data.DataColumn("CreateUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUser);
                this.columnModifyUser = new global::System.Data.DataColumn("ModifyUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyUser);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnVATNumber = new global::System.Data.DataColumn("VATNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATNumber);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnEMail = new global::System.Data.DataColumn("EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail);
                this.columnYourReference = new global::System.Data.DataColumn("YourReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYourReference);
                this.columnCustomerNumber = new global::System.Data.DataColumn("CustomerNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerNumber);
                this.columnCustomerType = new global::System.Data.DataColumn("CustomerType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerType);
                this.columnPreferredCurrency = new global::System.Data.DataColumn("PreferredCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreferredCurrency);
                this.columnIsSystemUser = new global::System.Data.DataColumn("IsSystemUser", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSystemUser);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnCreateDateTime.AllowDBNull = false;
                this.columnModifyDateTime.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 250;
                this.columnCreateUser.AllowDBNull = false;
                this.columnModifyUser.AllowDBNull = false;
                this.columnIsActive.AllowDBNull = false;
                this.columnVATNumber.AllowDBNull = false;
                this.columnVATNumber.MaxLength = 40;
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 40;
                this.columnEMail.AllowDBNull = false;
                this.columnEMail.MaxLength = 40;
                this.columnYourReference.AllowDBNull = false;
                this.columnYourReference.MaxLength = 40;
                this.columnCustomerNumber.AutoIncrement = true;
                this.columnCustomerNumber.AutoIncrementSeed = -1;
                this.columnCustomerNumber.AutoIncrementStep = -1;
                this.columnCustomerNumber.AllowDBNull = false;
                this.columnCustomerNumber.ReadOnly = true;
                this.columnCustomerType.AllowDBNull = false;
                this.columnCustomerType.MaxLength = 15;
                this.columnPreferredCurrency.AllowDBNull = false;
                this.columnPreferredCurrency.MaxLength = 3;
                this.columnIsSystemUser.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetRow NewRelationSetRow() {
                return ((RelationSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RelationSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RelationSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RelationSetRowChanged != null)) {
                    this.RelationSetRowChanged(this, new RelationSetRowChangeEvent(((RelationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RelationSetRowChanging != null)) {
                    this.RelationSetRowChanging(this, new RelationSetRowChangeEvent(((RelationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RelationSetRowDeleted != null)) {
                    this.RelationSetRowDeleted(this, new RelationSetRowChangeEvent(((RelationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RelationSetRowDeleting != null)) {
                    this.RelationSetRowDeleting(this, new RelationSetRowChangeEvent(((RelationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRelationSetRow(RelationSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRelationWork ds = new DataSetRelationWork();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelationSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelationAddressSetDataTable : global::System.Data.TypedTableBase<RelationAddressSetRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnModifyDateTime;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreateUser;
            
            private global::System.Data.DataColumn columnModifyUser;
            
            private global::System.Data.DataColumn columnAdressLine1;
            
            private global::System.Data.DataColumn columnAdressLine2;
            
            private global::System.Data.DataColumn columnAdressLine3;
            
            private global::System.Data.DataColumn columnZIPcode;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnRelation_Id;
            
            private global::System.Data.DataColumn columnAdressType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetDataTable() {
                this.TableName = "RelationAddressSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RelationAddressSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RelationAddressSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyDateTimeColumn {
                get {
                    return this.columnModifyDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateUserColumn {
                get {
                    return this.columnCreateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyUserColumn {
                get {
                    return this.columnModifyUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine1Column {
                get {
                    return this.columnAdressLine1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine2Column {
                get {
                    return this.columnAdressLine2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine3Column {
                get {
                    return this.columnAdressLine3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZIPcodeColumn {
                get {
                    return this.columnZIPcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Relation_IdColumn {
                get {
                    return this.columnRelation_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressTypeColumn {
                get {
                    return this.columnAdressType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow this[int index] {
                get {
                    return ((RelationAddressSetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationAddressSetRowChangeEventHandler RelationAddressSetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationAddressSetRowChangeEventHandler RelationAddressSetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationAddressSetRowChangeEventHandler RelationAddressSetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationAddressSetRowChangeEventHandler RelationAddressSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRelationAddressSetRow(RelationAddressSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow AddRelationAddressSetRow(System.Guid Id, System.DateTime CreateDateTime, System.DateTime ModifyDateTime, string Description, System.Guid CreateUser, System.Guid ModifyUser, string AdressLine1, string AdressLine2, string AdressLine3, string ZIPcode, string City, string Country, bool IsActive, RelationSetRow parentRelationSetRowByRelationRelationAdress, string AdressType) {
                RelationAddressSetRow rowRelationAddressSetRow = ((RelationAddressSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        CreateDateTime,
                        ModifyDateTime,
                        Description,
                        CreateUser,
                        ModifyUser,
                        AdressLine1,
                        AdressLine2,
                        AdressLine3,
                        ZIPcode,
                        City,
                        Country,
                        IsActive,
                        null,
                        AdressType};
                if ((parentRelationSetRowByRelationRelationAdress != null)) {
                    columnValuesArray[13] = parentRelationSetRowByRelationRelationAdress[0];
                }
                rowRelationAddressSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelationAddressSetRow);
                return rowRelationAddressSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow FindById(System.Guid Id) {
                return ((RelationAddressSetRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RelationAddressSetDataTable cln = ((RelationAddressSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RelationAddressSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnModifyDateTime = base.Columns["ModifyDateTime"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreateUser = base.Columns["CreateUser"];
                this.columnModifyUser = base.Columns["ModifyUser"];
                this.columnAdressLine1 = base.Columns["AdressLine1"];
                this.columnAdressLine2 = base.Columns["AdressLine2"];
                this.columnAdressLine3 = base.Columns["AdressLine3"];
                this.columnZIPcode = base.Columns["ZIPcode"];
                this.columnCity = base.Columns["City"];
                this.columnCountry = base.Columns["Country"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnRelation_Id = base.Columns["Relation_Id"];
                this.columnAdressType = base.Columns["AdressType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnModifyDateTime = new global::System.Data.DataColumn("ModifyDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDateTime);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreateUser = new global::System.Data.DataColumn("CreateUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUser);
                this.columnModifyUser = new global::System.Data.DataColumn("ModifyUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyUser);
                this.columnAdressLine1 = new global::System.Data.DataColumn("AdressLine1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine1);
                this.columnAdressLine2 = new global::System.Data.DataColumn("AdressLine2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine2);
                this.columnAdressLine3 = new global::System.Data.DataColumn("AdressLine3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine3);
                this.columnZIPcode = new global::System.Data.DataColumn("ZIPcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIPcode);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnRelation_Id = new global::System.Data.DataColumn("Relation_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelation_Id);
                this.columnAdressType = new global::System.Data.DataColumn("AdressType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnCreateDateTime.AllowDBNull = false;
                this.columnModifyDateTime.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 250;
                this.columnCreateUser.AllowDBNull = false;
                this.columnModifyUser.AllowDBNull = false;
                this.columnAdressLine1.AllowDBNull = false;
                this.columnAdressLine1.MaxLength = 250;
                this.columnAdressLine2.AllowDBNull = false;
                this.columnAdressLine2.MaxLength = 250;
                this.columnAdressLine3.AllowDBNull = false;
                this.columnAdressLine3.MaxLength = 250;
                this.columnZIPcode.AllowDBNull = false;
                this.columnZIPcode.MaxLength = 20;
                this.columnCity.AllowDBNull = false;
                this.columnCity.MaxLength = 100;
                this.columnCountry.AllowDBNull = false;
                this.columnCountry.MaxLength = 100;
                this.columnIsActive.AllowDBNull = false;
                this.columnRelation_Id.AllowDBNull = false;
                this.columnAdressType.AllowDBNull = false;
                this.columnAdressType.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow NewRelationAddressSetRow() {
                return ((RelationAddressSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RelationAddressSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RelationAddressSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RelationAddressSetRowChanged != null)) {
                    this.RelationAddressSetRowChanged(this, new RelationAddressSetRowChangeEvent(((RelationAddressSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RelationAddressSetRowChanging != null)) {
                    this.RelationAddressSetRowChanging(this, new RelationAddressSetRowChangeEvent(((RelationAddressSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RelationAddressSetRowDeleted != null)) {
                    this.RelationAddressSetRowDeleted(this, new RelationAddressSetRowChangeEvent(((RelationAddressSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RelationAddressSetRowDeleting != null)) {
                    this.RelationAddressSetRowDeleting(this, new RelationAddressSetRowChangeEvent(((RelationAddressSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRelationAddressSetRow(RelationAddressSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRelationWork ds = new DataSetRelationWork();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelationAddressSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LocationSetDataTable : global::System.Data.TypedTableBase<LocationSetRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnModifyDateTime;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreateUser;
            
            private global::System.Data.DataColumn columnModifyUser;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnZIPcode;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnVATNumber;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnEMail;
            
            private global::System.Data.DataColumn columnPreferredCurrency;
            
            private global::System.Data.DataColumn columnLocationNumber;
            
            private global::System.Data.DataColumn columnAdressLine1;
            
            private global::System.Data.DataColumn columnAdressLine2;
            
            private global::System.Data.DataColumn columnAdressLine3;
            
            private global::System.Data.DataColumn columnInvoiceAddress;
            
            private global::System.Data.DataColumn columnInvoiceFooter;
            
            private global::System.Data.DataColumn columnInvoicePrintLogo;
            
            private global::System.Data.DataColumn columnDefaultVATPercentage;
            
            private global::System.Data.DataColumn columnDefaultHourlyRate;
            
            private global::System.Data.DataColumn columnDefaultWeighingTariff;
            
            private global::System.Data.DataColumn columnMaterialForDirtId;
            
            private global::System.Data.DataColumn columnMaterialForWorkId;
            
            private global::System.Data.DataColumn columnCashLedgerId;
            
            private global::System.Data.DataColumn columnBankLedgerId;
            
            private global::System.Data.DataColumn columnInvoiceFooterPerPage;
            
            private global::System.Data.DataColumn columnCompanyLogoImage;
            
            private global::System.Data.DataColumn columnCompanyMembershipsLogo;
            
            private global::System.Data.DataColumn columnDefaultWeighingTariffBookingCode_Id;
            
            private global::System.Data.DataColumn columnRelationSale_Id;
            
            private global::System.Data.DataColumn columnRelationBuy_Id;
            
            private global::System.Data.DataColumn columnDefaultBailPriceBookingCode_Id;
            
            private global::System.Data.DataColumn columnVIHBCode;
            
            private global::System.Data.DataColumn columnContactPerson;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetDataTable() {
                this.TableName = "LocationSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LocationSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LocationSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyDateTimeColumn {
                get {
                    return this.columnModifyDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateUserColumn {
                get {
                    return this.columnCreateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyUserColumn {
                get {
                    return this.columnModifyUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZIPcodeColumn {
                get {
                    return this.columnZIPcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VATNumberColumn {
                get {
                    return this.columnVATNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailColumn {
                get {
                    return this.columnEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreferredCurrencyColumn {
                get {
                    return this.columnPreferredCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationNumberColumn {
                get {
                    return this.columnLocationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine1Column {
                get {
                    return this.columnAdressLine1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine2Column {
                get {
                    return this.columnAdressLine2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressLine3Column {
                get {
                    return this.columnAdressLine3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceAddressColumn {
                get {
                    return this.columnInvoiceAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceFooterColumn {
                get {
                    return this.columnInvoiceFooter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicePrintLogoColumn {
                get {
                    return this.columnInvoicePrintLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultVATPercentageColumn {
                get {
                    return this.columnDefaultVATPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultHourlyRateColumn {
                get {
                    return this.columnDefaultHourlyRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultWeighingTariffColumn {
                get {
                    return this.columnDefaultWeighingTariff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialForDirtIdColumn {
                get {
                    return this.columnMaterialForDirtId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialForWorkIdColumn {
                get {
                    return this.columnMaterialForWorkId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CashLedgerIdColumn {
                get {
                    return this.columnCashLedgerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankLedgerIdColumn {
                get {
                    return this.columnBankLedgerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceFooterPerPageColumn {
                get {
                    return this.columnInvoiceFooterPerPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyLogoImageColumn {
                get {
                    return this.columnCompanyLogoImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyMembershipsLogoColumn {
                get {
                    return this.columnCompanyMembershipsLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultWeighingTariffBookingCode_IdColumn {
                get {
                    return this.columnDefaultWeighingTariffBookingCode_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelationSale_IdColumn {
                get {
                    return this.columnRelationSale_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelationBuy_IdColumn {
                get {
                    return this.columnRelationBuy_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultBailPriceBookingCode_IdColumn {
                get {
                    return this.columnDefaultBailPriceBookingCode_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIHBCodeColumn {
                get {
                    return this.columnVIHBCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactPersonColumn {
                get {
                    return this.columnContactPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow this[int index] {
                get {
                    return ((LocationSetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LocationSetRowChangeEventHandler LocationSetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LocationSetRowChangeEventHandler LocationSetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LocationSetRowChangeEventHandler LocationSetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LocationSetRowChangeEventHandler LocationSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLocationSetRow(LocationSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow AddLocationSetRow(
                        System.Guid Id, 
                        System.DateTime CreateDateTime, 
                        System.DateTime ModifyDateTime, 
                        string Description, 
                        System.Guid CreateUser, 
                        System.Guid ModifyUser, 
                        bool IsActive, 
                        string ZIPcode, 
                        string City, 
                        string Country, 
                        string VATNumber, 
                        string PhoneNumber, 
                        string EMail, 
                        string PreferredCurrency, 
                        string AdressLine1, 
                        string AdressLine2, 
                        string AdressLine3, 
                        string InvoiceAddress, 
                        string InvoiceFooter, 
                        bool InvoicePrintLogo, 
                        double DefaultVATPercentage, 
                        double DefaultHourlyRate, 
                        double DefaultWeighingTariff, 
                        System.Guid MaterialForDirtId, 
                        System.Guid MaterialForWorkId, 
                        System.Guid CashLedgerId, 
                        System.Guid BankLedgerId, 
                        string InvoiceFooterPerPage, 
                        byte[] CompanyLogoImage, 
                        byte[] CompanyMembershipsLogo, 
                        System.Guid DefaultWeighingTariffBookingCode_Id, 
                        RelationSetRow parentRelationSetRowByLocationRelation, 
                        RelationSetRow parentRelationSetRowByLocationRelation1, 
                        System.Guid DefaultBailPriceBookingCode_Id, 
                        string VIHBCode, 
                        string ContactPerson) {
                LocationSetRow rowLocationSetRow = ((LocationSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        CreateDateTime,
                        ModifyDateTime,
                        Description,
                        CreateUser,
                        ModifyUser,
                        IsActive,
                        ZIPcode,
                        City,
                        Country,
                        VATNumber,
                        PhoneNumber,
                        EMail,
                        PreferredCurrency,
                        null,
                        AdressLine1,
                        AdressLine2,
                        AdressLine3,
                        InvoiceAddress,
                        InvoiceFooter,
                        InvoicePrintLogo,
                        DefaultVATPercentage,
                        DefaultHourlyRate,
                        DefaultWeighingTariff,
                        MaterialForDirtId,
                        MaterialForWorkId,
                        CashLedgerId,
                        BankLedgerId,
                        InvoiceFooterPerPage,
                        CompanyLogoImage,
                        CompanyMembershipsLogo,
                        DefaultWeighingTariffBookingCode_Id,
                        null,
                        null,
                        DefaultBailPriceBookingCode_Id,
                        VIHBCode,
                        ContactPerson};
                if ((parentRelationSetRowByLocationRelation != null)) {
                    columnValuesArray[32] = parentRelationSetRowByLocationRelation[0];
                }
                if ((parentRelationSetRowByLocationRelation1 != null)) {
                    columnValuesArray[33] = parentRelationSetRowByLocationRelation1[0];
                }
                rowLocationSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLocationSetRow);
                return rowLocationSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow FindById(System.Guid Id) {
                return ((LocationSetRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LocationSetDataTable cln = ((LocationSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LocationSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnModifyDateTime = base.Columns["ModifyDateTime"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreateUser = base.Columns["CreateUser"];
                this.columnModifyUser = base.Columns["ModifyUser"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnZIPcode = base.Columns["ZIPcode"];
                this.columnCity = base.Columns["City"];
                this.columnCountry = base.Columns["Country"];
                this.columnVATNumber = base.Columns["VATNumber"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnEMail = base.Columns["EMail"];
                this.columnPreferredCurrency = base.Columns["PreferredCurrency"];
                this.columnLocationNumber = base.Columns["LocationNumber"];
                this.columnAdressLine1 = base.Columns["AdressLine1"];
                this.columnAdressLine2 = base.Columns["AdressLine2"];
                this.columnAdressLine3 = base.Columns["AdressLine3"];
                this.columnInvoiceAddress = base.Columns["InvoiceAddress"];
                this.columnInvoiceFooter = base.Columns["InvoiceFooter"];
                this.columnInvoicePrintLogo = base.Columns["InvoicePrintLogo"];
                this.columnDefaultVATPercentage = base.Columns["DefaultVATPercentage"];
                this.columnDefaultHourlyRate = base.Columns["DefaultHourlyRate"];
                this.columnDefaultWeighingTariff = base.Columns["DefaultWeighingTariff"];
                this.columnMaterialForDirtId = base.Columns["MaterialForDirtId"];
                this.columnMaterialForWorkId = base.Columns["MaterialForWorkId"];
                this.columnCashLedgerId = base.Columns["CashLedgerId"];
                this.columnBankLedgerId = base.Columns["BankLedgerId"];
                this.columnInvoiceFooterPerPage = base.Columns["InvoiceFooterPerPage"];
                this.columnCompanyLogoImage = base.Columns["CompanyLogoImage"];
                this.columnCompanyMembershipsLogo = base.Columns["CompanyMembershipsLogo"];
                this.columnDefaultWeighingTariffBookingCode_Id = base.Columns["DefaultWeighingTariffBookingCode_Id"];
                this.columnRelationSale_Id = base.Columns["RelationSale_Id"];
                this.columnRelationBuy_Id = base.Columns["RelationBuy_Id"];
                this.columnDefaultBailPriceBookingCode_Id = base.Columns["DefaultBailPriceBookingCode_Id"];
                this.columnVIHBCode = base.Columns["VIHBCode"];
                this.columnContactPerson = base.Columns["ContactPerson"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnModifyDateTime = new global::System.Data.DataColumn("ModifyDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDateTime);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreateUser = new global::System.Data.DataColumn("CreateUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUser);
                this.columnModifyUser = new global::System.Data.DataColumn("ModifyUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyUser);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnZIPcode = new global::System.Data.DataColumn("ZIPcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIPcode);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnVATNumber = new global::System.Data.DataColumn("VATNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATNumber);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnEMail = new global::System.Data.DataColumn("EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail);
                this.columnPreferredCurrency = new global::System.Data.DataColumn("PreferredCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreferredCurrency);
                this.columnLocationNumber = new global::System.Data.DataColumn("LocationNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationNumber);
                this.columnAdressLine1 = new global::System.Data.DataColumn("AdressLine1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine1);
                this.columnAdressLine2 = new global::System.Data.DataColumn("AdressLine2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine2);
                this.columnAdressLine3 = new global::System.Data.DataColumn("AdressLine3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdressLine3);
                this.columnInvoiceAddress = new global::System.Data.DataColumn("InvoiceAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddress);
                this.columnInvoiceFooter = new global::System.Data.DataColumn("InvoiceFooter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFooter);
                this.columnInvoicePrintLogo = new global::System.Data.DataColumn("InvoicePrintLogo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePrintLogo);
                this.columnDefaultVATPercentage = new global::System.Data.DataColumn("DefaultVATPercentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultVATPercentage);
                this.columnDefaultHourlyRate = new global::System.Data.DataColumn("DefaultHourlyRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultHourlyRate);
                this.columnDefaultWeighingTariff = new global::System.Data.DataColumn("DefaultWeighingTariff", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultWeighingTariff);
                this.columnMaterialForDirtId = new global::System.Data.DataColumn("MaterialForDirtId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialForDirtId);
                this.columnMaterialForWorkId = new global::System.Data.DataColumn("MaterialForWorkId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialForWorkId);
                this.columnCashLedgerId = new global::System.Data.DataColumn("CashLedgerId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashLedgerId);
                this.columnBankLedgerId = new global::System.Data.DataColumn("BankLedgerId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankLedgerId);
                this.columnInvoiceFooterPerPage = new global::System.Data.DataColumn("InvoiceFooterPerPage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFooterPerPage);
                this.columnCompanyLogoImage = new global::System.Data.DataColumn("CompanyLogoImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyLogoImage);
                this.columnCompanyMembershipsLogo = new global::System.Data.DataColumn("CompanyMembershipsLogo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyMembershipsLogo);
                this.columnDefaultWeighingTariffBookingCode_Id = new global::System.Data.DataColumn("DefaultWeighingTariffBookingCode_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultWeighingTariffBookingCode_Id);
                this.columnRelationSale_Id = new global::System.Data.DataColumn("RelationSale_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationSale_Id);
                this.columnRelationBuy_Id = new global::System.Data.DataColumn("RelationBuy_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationBuy_Id);
                this.columnDefaultBailPriceBookingCode_Id = new global::System.Data.DataColumn("DefaultBailPriceBookingCode_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultBailPriceBookingCode_Id);
                this.columnVIHBCode = new global::System.Data.DataColumn("VIHBCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIHBCode);
                this.columnContactPerson = new global::System.Data.DataColumn("ContactPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPerson);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnCreateDateTime.AllowDBNull = false;
                this.columnModifyDateTime.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 250;
                this.columnCreateUser.AllowDBNull = false;
                this.columnModifyUser.AllowDBNull = false;
                this.columnIsActive.AllowDBNull = false;
                this.columnZIPcode.AllowDBNull = false;
                this.columnZIPcode.MaxLength = 20;
                this.columnCity.AllowDBNull = false;
                this.columnCity.MaxLength = 100;
                this.columnCountry.AllowDBNull = false;
                this.columnCountry.MaxLength = 100;
                this.columnVATNumber.AllowDBNull = false;
                this.columnVATNumber.MaxLength = 40;
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 40;
                this.columnEMail.AllowDBNull = false;
                this.columnEMail.MaxLength = 40;
                this.columnPreferredCurrency.AllowDBNull = false;
                this.columnPreferredCurrency.MaxLength = 3;
                this.columnLocationNumber.AutoIncrement = true;
                this.columnLocationNumber.AutoIncrementSeed = -1;
                this.columnLocationNumber.AutoIncrementStep = -1;
                this.columnLocationNumber.AllowDBNull = false;
                this.columnLocationNumber.ReadOnly = true;
                this.columnAdressLine1.AllowDBNull = false;
                this.columnAdressLine1.MaxLength = 250;
                this.columnAdressLine2.AllowDBNull = false;
                this.columnAdressLine2.MaxLength = 250;
                this.columnAdressLine3.AllowDBNull = false;
                this.columnAdressLine3.MaxLength = 250;
                this.columnInvoiceAddress.AllowDBNull = false;
                this.columnInvoiceAddress.MaxLength = 250;
                this.columnInvoiceFooter.AllowDBNull = false;
                this.columnInvoiceFooter.MaxLength = 250;
                this.columnInvoicePrintLogo.AllowDBNull = false;
                this.columnDefaultVATPercentage.AllowDBNull = false;
                this.columnDefaultHourlyRate.AllowDBNull = false;
                this.columnDefaultWeighingTariff.AllowDBNull = false;
                this.columnInvoiceFooterPerPage.AllowDBNull = false;
                this.columnInvoiceFooterPerPage.MaxLength = 250;
                this.columnDefaultBailPriceBookingCode_Id.AllowDBNull = false;
                this.columnVIHBCode.AllowDBNull = false;
                this.columnVIHBCode.MaxLength = 20;
                this.columnContactPerson.AllowDBNull = false;
                this.columnContactPerson.MaxLength = 40;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow NewLocationSetRow() {
                return ((LocationSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LocationSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LocationSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LocationSetRowChanged != null)) {
                    this.LocationSetRowChanged(this, new LocationSetRowChangeEvent(((LocationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LocationSetRowChanging != null)) {
                    this.LocationSetRowChanging(this, new LocationSetRowChangeEvent(((LocationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LocationSetRowDeleted != null)) {
                    this.LocationSetRowDeleted(this, new LocationSetRowChangeEvent(((LocationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LocationSetRowDeleting != null)) {
                    this.LocationSetRowDeleting(this, new LocationSetRowChangeEvent(((LocationSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLocationSetRow(LocationSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRelationWork ds = new DataSetRelationWork();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LocationSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelationWorkSetDataTable : global::System.Data.TypedTableBase<RelationWorkSetRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnModifyDateTime;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreateUser;
            
            private global::System.Data.DataColumn columnModifyUser;
            
            private global::System.Data.DataColumn columnHourlyRate;
            
            private global::System.Data.DataColumn columnHours;
            
            private global::System.Data.DataColumn columnAmountPaidBack;
            
            private global::System.Data.DataColumn columnAmountEXVat;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnAgreementDateTime;
            
            private global::System.Data.DataColumn columnIsVATApplicable;
            
            private global::System.Data.DataColumn columnIsTreatedAsAdvancePayment;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnVATPercentage;
            
            private global::System.Data.DataColumn columnWorkType;
            
            private global::System.Data.DataColumn columnRelation_Id;
            
            private global::System.Data.DataColumn columnLedgerBookingCode_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationWorkSetDataTable() {
                this.TableName = "RelationWorkSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RelationWorkSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RelationWorkSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyDateTimeColumn {
                get {
                    return this.columnModifyDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateUserColumn {
                get {
                    return this.columnCreateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyUserColumn {
                get {
                    return this.columnModifyUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourlyRateColumn {
                get {
                    return this.columnHourlyRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoursColumn {
                get {
                    return this.columnHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountPaidBackColumn {
                get {
                    return this.columnAmountPaidBack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountEXVatColumn {
                get {
                    return this.columnAmountEXVat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgreementDateTimeColumn {
                get {
                    return this.columnAgreementDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsVATApplicableColumn {
                get {
                    return this.columnIsVATApplicable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsTreatedAsAdvancePaymentColumn {
                get {
                    return this.columnIsTreatedAsAdvancePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VATPercentageColumn {
                get {
                    return this.columnVATPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Relation_IdColumn {
                get {
                    return this.columnRelation_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LedgerBookingCode_IdColumn {
                get {
                    return this.columnLedgerBookingCode_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationWorkSetRow this[int index] {
                get {
                    return ((RelationWorkSetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationWorkSetRowChangeEventHandler RelationWorkSetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationWorkSetRowChangeEventHandler RelationWorkSetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationWorkSetRowChangeEventHandler RelationWorkSetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RelationWorkSetRowChangeEventHandler RelationWorkSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRelationWorkSetRow(RelationWorkSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationWorkSetRow AddRelationWorkSetRow(
                        System.Guid Id, 
                        System.DateTime CreateDateTime, 
                        System.DateTime ModifyDateTime, 
                        string Description, 
                        System.Guid CreateUser, 
                        System.Guid ModifyUser, 
                        double HourlyRate, 
                        double Hours, 
                        double AmountPaidBack, 
                        double AmountEXVat, 
                        double VATAmount, 
                        double TotalAmount, 
                        System.DateTime AgreementDateTime, 
                        bool IsVATApplicable, 
                        bool IsTreatedAsAdvancePayment, 
                        bool IsActive, 
                        double VATPercentage, 
                        string WorkType, 
                        RelationSetRow parentRelationSetRowByRelationRelationWork, 
                        System.Guid LedgerBookingCode_Id) {
                RelationWorkSetRow rowRelationWorkSetRow = ((RelationWorkSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        CreateDateTime,
                        ModifyDateTime,
                        Description,
                        CreateUser,
                        ModifyUser,
                        HourlyRate,
                        Hours,
                        AmountPaidBack,
                        AmountEXVat,
                        VATAmount,
                        TotalAmount,
                        AgreementDateTime,
                        IsVATApplicable,
                        IsTreatedAsAdvancePayment,
                        IsActive,
                        VATPercentage,
                        WorkType,
                        null,
                        LedgerBookingCode_Id};
                if ((parentRelationSetRowByRelationRelationWork != null)) {
                    columnValuesArray[18] = parentRelationSetRowByRelationRelationWork[0];
                }
                rowRelationWorkSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelationWorkSetRow);
                return rowRelationWorkSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationWorkSetRow FindById(System.Guid Id) {
                return ((RelationWorkSetRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RelationWorkSetDataTable cln = ((RelationWorkSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RelationWorkSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnModifyDateTime = base.Columns["ModifyDateTime"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreateUser = base.Columns["CreateUser"];
                this.columnModifyUser = base.Columns["ModifyUser"];
                this.columnHourlyRate = base.Columns["HourlyRate"];
                this.columnHours = base.Columns["Hours"];
                this.columnAmountPaidBack = base.Columns["AmountPaidBack"];
                this.columnAmountEXVat = base.Columns["AmountEXVat"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnAgreementDateTime = base.Columns["AgreementDateTime"];
                this.columnIsVATApplicable = base.Columns["IsVATApplicable"];
                this.columnIsTreatedAsAdvancePayment = base.Columns["IsTreatedAsAdvancePayment"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnVATPercentage = base.Columns["VATPercentage"];
                this.columnWorkType = base.Columns["WorkType"];
                this.columnRelation_Id = base.Columns["Relation_Id"];
                this.columnLedgerBookingCode_Id = base.Columns["LedgerBookingCode_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnModifyDateTime = new global::System.Data.DataColumn("ModifyDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDateTime);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreateUser = new global::System.Data.DataColumn("CreateUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUser);
                this.columnModifyUser = new global::System.Data.DataColumn("ModifyUser", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyUser);
                this.columnHourlyRate = new global::System.Data.DataColumn("HourlyRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourlyRate);
                this.columnHours = new global::System.Data.DataColumn("Hours", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHours);
                this.columnAmountPaidBack = new global::System.Data.DataColumn("AmountPaidBack", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaidBack);
                this.columnAmountEXVat = new global::System.Data.DataColumn("AmountEXVat", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountEXVat);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnAgreementDateTime = new global::System.Data.DataColumn("AgreementDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgreementDateTime);
                this.columnIsVATApplicable = new global::System.Data.DataColumn("IsVATApplicable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVATApplicable);
                this.columnIsTreatedAsAdvancePayment = new global::System.Data.DataColumn("IsTreatedAsAdvancePayment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTreatedAsAdvancePayment);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnVATPercentage = new global::System.Data.DataColumn("VATPercentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATPercentage);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnRelation_Id = new global::System.Data.DataColumn("Relation_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelation_Id);
                this.columnLedgerBookingCode_Id = new global::System.Data.DataColumn("LedgerBookingCode_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLedgerBookingCode_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnCreateDateTime.AllowDBNull = false;
                this.columnModifyDateTime.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 250;
                this.columnCreateUser.AllowDBNull = false;
                this.columnModifyUser.AllowDBNull = false;
                this.columnHourlyRate.AllowDBNull = false;
                this.columnHours.AllowDBNull = false;
                this.columnAmountPaidBack.AllowDBNull = false;
                this.columnAmountEXVat.AllowDBNull = false;
                this.columnVATAmount.AllowDBNull = false;
                this.columnTotalAmount.AllowDBNull = false;
                this.columnAgreementDateTime.AllowDBNull = false;
                this.columnIsVATApplicable.AllowDBNull = false;
                this.columnIsTreatedAsAdvancePayment.AllowDBNull = false;
                this.columnIsActive.AllowDBNull = false;
                this.columnVATPercentage.AllowDBNull = false;
                this.columnWorkType.AllowDBNull = false;
                this.columnWorkType.MaxLength = 10;
                this.columnRelation_Id.AllowDBNull = false;
                this.columnLedgerBookingCode_Id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationWorkSetRow NewRelationWorkSetRow() {
                return ((RelationWorkSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RelationWorkSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RelationWorkSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RelationWorkSetRowChanged != null)) {
                    this.RelationWorkSetRowChanged(this, new RelationWorkSetRowChangeEvent(((RelationWorkSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RelationWorkSetRowChanging != null)) {
                    this.RelationWorkSetRowChanging(this, new RelationWorkSetRowChangeEvent(((RelationWorkSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RelationWorkSetRowDeleted != null)) {
                    this.RelationWorkSetRowDeleted(this, new RelationWorkSetRowChangeEvent(((RelationWorkSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RelationWorkSetRowDeleting != null)) {
                    this.RelationWorkSetRowDeleting(this, new RelationWorkSetRowChangeEvent(((RelationWorkSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRelationWorkSetRow(RelationWorkSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRelationWork ds = new DataSetRelationWork();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelationWorkSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RelationSetRow : global::System.Data.DataRow {
            
            private RelationSetDataTable tableRelationSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RelationSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelationSet = ((RelationSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableRelationSet.IdColumn]));
                }
                set {
                    this[this.tableRelationSet.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRelationSet.CreateDateTimeColumn]));
                }
                set {
                    this[this.tableRelationSet.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifyDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRelationSet.ModifyDateTimeColumn]));
                }
                set {
                    this[this.tableRelationSet.ModifyDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableRelationSet.DescriptionColumn]));
                }
                set {
                    this[this.tableRelationSet.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreateUser {
                get {
                    return ((global::System.Guid)(this[this.tableRelationSet.CreateUserColumn]));
                }
                set {
                    this[this.tableRelationSet.CreateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ModifyUser {
                get {
                    return ((global::System.Guid)(this[this.tableRelationSet.ModifyUserColumn]));
                }
                set {
                    this[this.tableRelationSet.ModifyUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableRelationSet.IsActiveColumn]));
                }
                set {
                    this[this.tableRelationSet.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VATNumber {
                get {
                    return ((string)(this[this.tableRelationSet.VATNumberColumn]));
                }
                set {
                    this[this.tableRelationSet.VATNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tableRelationSet.PhoneNumberColumn]));
                }
                set {
                    this[this.tableRelationSet.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMail {
                get {
                    return ((string)(this[this.tableRelationSet.EMailColumn]));
                }
                set {
                    this[this.tableRelationSet.EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string YourReference {
                get {
                    return ((string)(this[this.tableRelationSet.YourReferenceColumn]));
                }
                set {
                    this[this.tableRelationSet.YourReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CustomerNumber {
                get {
                    return ((long)(this[this.tableRelationSet.CustomerNumberColumn]));
                }
                set {
                    this[this.tableRelationSet.CustomerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerType {
                get {
                    return ((string)(this[this.tableRelationSet.CustomerTypeColumn]));
                }
                set {
                    this[this.tableRelationSet.CustomerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PreferredCurrency {
                get {
                    return ((string)(this[this.tableRelationSet.PreferredCurrencyColumn]));
                }
                set {
                    this[this.tableRelationSet.PreferredCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSystemUser {
                get {
                    return ((bool)(this[this.tableRelationSet.IsSystemUserColumn]));
                }
                set {
                    this[this.tableRelationSet.IsSystemUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow[] GetRelationAddressSetRows() {
                if ((this.Table.ChildRelations["RelationRelationAdress"] == null)) {
                    return new RelationAddressSetRow[0];
                }
                else {
                    return ((RelationAddressSetRow[])(base.GetChildRows(this.Table.ChildRelations["RelationRelationAdress"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow[] GetLocationSetRowsByLocationRelation() {
                if ((this.Table.ChildRelations["LocationRelation"] == null)) {
                    return new LocationSetRow[0];
                }
                else {
                    return ((LocationSetRow[])(base.GetChildRows(this.Table.ChildRelations["LocationRelation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow[] GetLocationSetRowsByLocationRelation1() {
                if ((this.Table.ChildRelations["LocationRelation1"] == null)) {
                    return new LocationSetRow[0];
                }
                else {
                    return ((LocationSetRow[])(base.GetChildRows(this.Table.ChildRelations["LocationRelation1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationWorkSetRow[] GetRelationWorkSetRows() {
                if ((this.Table.ChildRelations["RelationRelationWork"] == null)) {
                    return new RelationWorkSetRow[0];
                }
                else {
                    return ((RelationWorkSetRow[])(base.GetChildRows(this.Table.ChildRelations["RelationRelationWork"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RelationAddressSetRow : global::System.Data.DataRow {
            
            private RelationAddressSetDataTable tableRelationAddressSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RelationAddressSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelationAddressSet = ((RelationAddressSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableRelationAddressSet.IdColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRelationAddressSet.CreateDateTimeColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifyDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRelationAddressSet.ModifyDateTimeColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.ModifyDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableRelationAddressSet.DescriptionColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreateUser {
                get {
                    return ((global::System.Guid)(this[this.tableRelationAddressSet.CreateUserColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.CreateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ModifyUser {
                get {
                    return ((global::System.Guid)(this[this.tableRelationAddressSet.ModifyUserColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.ModifyUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine1 {
                get {
                    return ((string)(this[this.tableRelationAddressSet.AdressLine1Column]));
                }
                set {
                    this[this.tableRelationAddressSet.AdressLine1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine2 {
                get {
                    return ((string)(this[this.tableRelationAddressSet.AdressLine2Column]));
                }
                set {
                    this[this.tableRelationAddressSet.AdressLine2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine3 {
                get {
                    return ((string)(this[this.tableRelationAddressSet.AdressLine3Column]));
                }
                set {
                    this[this.tableRelationAddressSet.AdressLine3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ZIPcode {
                get {
                    return ((string)(this[this.tableRelationAddressSet.ZIPcodeColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.ZIPcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    return ((string)(this[this.tableRelationAddressSet.CityColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    return ((string)(this[this.tableRelationAddressSet.CountryColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableRelationAddressSet.IsActiveColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Relation_Id {
                get {
                    return ((global::System.Guid)(this[this.tableRelationAddressSet.Relation_IdColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.Relation_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressType {
                get {
                    return ((string)(this[this.tableRelationAddressSet.AdressTypeColumn]));
                }
                set {
                    this[this.tableRelationAddressSet.AdressTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetRow RelationSetRow {
                get {
                    return ((RelationSetRow)(this.GetParentRow(this.Table.ParentRelations["RelationRelationAdress"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RelationRelationAdress"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LocationSetRow : global::System.Data.DataRow {
            
            private LocationSetDataTable tableLocationSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LocationSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLocationSet = ((LocationSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableLocationSet.IdColumn]));
                }
                set {
                    this[this.tableLocationSet.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableLocationSet.CreateDateTimeColumn]));
                }
                set {
                    this[this.tableLocationSet.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifyDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableLocationSet.ModifyDateTimeColumn]));
                }
                set {
                    this[this.tableLocationSet.ModifyDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableLocationSet.DescriptionColumn]));
                }
                set {
                    this[this.tableLocationSet.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreateUser {
                get {
                    return ((global::System.Guid)(this[this.tableLocationSet.CreateUserColumn]));
                }
                set {
                    this[this.tableLocationSet.CreateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ModifyUser {
                get {
                    return ((global::System.Guid)(this[this.tableLocationSet.ModifyUserColumn]));
                }
                set {
                    this[this.tableLocationSet.ModifyUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableLocationSet.IsActiveColumn]));
                }
                set {
                    this[this.tableLocationSet.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ZIPcode {
                get {
                    return ((string)(this[this.tableLocationSet.ZIPcodeColumn]));
                }
                set {
                    this[this.tableLocationSet.ZIPcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    return ((string)(this[this.tableLocationSet.CityColumn]));
                }
                set {
                    this[this.tableLocationSet.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    return ((string)(this[this.tableLocationSet.CountryColumn]));
                }
                set {
                    this[this.tableLocationSet.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VATNumber {
                get {
                    return ((string)(this[this.tableLocationSet.VATNumberColumn]));
                }
                set {
                    this[this.tableLocationSet.VATNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tableLocationSet.PhoneNumberColumn]));
                }
                set {
                    this[this.tableLocationSet.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMail {
                get {
                    return ((string)(this[this.tableLocationSet.EMailColumn]));
                }
                set {
                    this[this.tableLocationSet.EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PreferredCurrency {
                get {
                    return ((string)(this[this.tableLocationSet.PreferredCurrencyColumn]));
                }
                set {
                    this[this.tableLocationSet.PreferredCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long LocationNumber {
                get {
                    return ((long)(this[this.tableLocationSet.LocationNumberColumn]));
                }
                set {
                    this[this.tableLocationSet.LocationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine1 {
                get {
                    return ((string)(this[this.tableLocationSet.AdressLine1Column]));
                }
                set {
                    this[this.tableLocationSet.AdressLine1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine2 {
                get {
                    return ((string)(this[this.tableLocationSet.AdressLine2Column]));
                }
                set {
                    this[this.tableLocationSet.AdressLine2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdressLine3 {
                get {
                    return ((string)(this[this.tableLocationSet.AdressLine3Column]));
                }
                set {
                    this[this.tableLocationSet.AdressLine3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceAddress {
                get {
                    return ((string)(this[this.tableLocationSet.InvoiceAddressColumn]));
                }
                set {
                    this[this.tableLocationSet.InvoiceAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceFooter {
                get {
                    return ((string)(this[this.tableLocationSet.InvoiceFooterColumn]));
                }
                set {
                    this[this.tableLocationSet.InvoiceFooterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool InvoicePrintLogo {
                get {
                    return ((bool)(this[this.tableLocationSet.InvoicePrintLogoColumn]));
                }
                set {
                    this[this.tableLocationSet.InvoicePrintLogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DefaultVATPercentage {
                get {
                    return ((double)(this[this.tableLocationSet.DefaultVATPercentageColumn]));
                }
                set {
                    this[this.tableLocationSet.DefaultVATPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DefaultHourlyRate {
                get {
                    return ((double)(this[this.tableLocationSet.DefaultHourlyRateColumn]));
                }
                set {
                    this[this.tableLocationSet.DefaultHourlyRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DefaultWeighingTariff {
                get {
                    return ((double)(this[this.tableLocationSet.DefaultWeighingTariffColumn]));
                }
                set {
                    this[this.tableLocationSet.DefaultWeighingTariffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid MaterialForDirtId {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.MaterialForDirtIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialForDirtId\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.MaterialForDirtIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid MaterialForWorkId {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.MaterialForWorkIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialForWorkId\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.MaterialForWorkIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CashLedgerId {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.CashLedgerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashLedgerId\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.CashLedgerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid BankLedgerId {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.BankLedgerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankLedgerId\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.BankLedgerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceFooterPerPage {
                get {
                    return ((string)(this[this.tableLocationSet.InvoiceFooterPerPageColumn]));
                }
                set {
                    this[this.tableLocationSet.InvoiceFooterPerPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] CompanyLogoImage {
                get {
                    try {
                        return ((byte[])(this[this.tableLocationSet.CompanyLogoImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyLogoImage\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.CompanyLogoImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] CompanyMembershipsLogo {
                get {
                    try {
                        return ((byte[])(this[this.tableLocationSet.CompanyMembershipsLogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyMembershipsLogo\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.CompanyMembershipsLogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid DefaultWeighingTariffBookingCode_Id {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.DefaultWeighingTariffBookingCode_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultWeighingTariffBookingCode_Id\' in table \'LocationSet\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.DefaultWeighingTariffBookingCode_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RelationSale_Id {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.RelationSale_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationSale_Id\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.RelationSale_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RelationBuy_Id {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocationSet.RelationBuy_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationBuy_Id\' in table \'LocationSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationSet.RelationBuy_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid DefaultBailPriceBookingCode_Id {
                get {
                    return ((global::System.Guid)(this[this.tableLocationSet.DefaultBailPriceBookingCode_IdColumn]));
                }
                set {
                    this[this.tableLocationSet.DefaultBailPriceBookingCode_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIHBCode {
                get {
                    return ((string)(this[this.tableLocationSet.VIHBCodeColumn]));
                }
                set {
                    this[this.tableLocationSet.VIHBCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactPerson {
                get {
                    return ((string)(this[this.tableLocationSet.ContactPersonColumn]));
                }
                set {
                    this[this.tableLocationSet.ContactPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetRow RelationSetRowByLocationRelation {
                get {
                    return ((RelationSetRow)(this.GetParentRow(this.Table.ParentRelations["LocationRelation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LocationRelation"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetRow RelationSetRowByLocationRelation1 {
                get {
                    return ((RelationSetRow)(this.GetParentRow(this.Table.ParentRelations["LocationRelation1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LocationRelation1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialForDirtIdNull() {
                return this.IsNull(this.tableLocationSet.MaterialForDirtIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialForDirtIdNull() {
                this[this.tableLocationSet.MaterialForDirtIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialForWorkIdNull() {
                return this.IsNull(this.tableLocationSet.MaterialForWorkIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialForWorkIdNull() {
                this[this.tableLocationSet.MaterialForWorkIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCashLedgerIdNull() {
                return this.IsNull(this.tableLocationSet.CashLedgerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCashLedgerIdNull() {
                this[this.tableLocationSet.CashLedgerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankLedgerIdNull() {
                return this.IsNull(this.tableLocationSet.BankLedgerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankLedgerIdNull() {
                this[this.tableLocationSet.BankLedgerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompanyLogoImageNull() {
                return this.IsNull(this.tableLocationSet.CompanyLogoImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompanyLogoImageNull() {
                this[this.tableLocationSet.CompanyLogoImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompanyMembershipsLogoNull() {
                return this.IsNull(this.tableLocationSet.CompanyMembershipsLogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompanyMembershipsLogoNull() {
                this[this.tableLocationSet.CompanyMembershipsLogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultWeighingTariffBookingCode_IdNull() {
                return this.IsNull(this.tableLocationSet.DefaultWeighingTariffBookingCode_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultWeighingTariffBookingCode_IdNull() {
                this[this.tableLocationSet.DefaultWeighingTariffBookingCode_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRelationSale_IdNull() {
                return this.IsNull(this.tableLocationSet.RelationSale_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRelationSale_IdNull() {
                this[this.tableLocationSet.RelationSale_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRelationBuy_IdNull() {
                return this.IsNull(this.tableLocationSet.RelationBuy_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRelationBuy_IdNull() {
                this[this.tableLocationSet.RelationBuy_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RelationWorkSetRow : global::System.Data.DataRow {
            
            private RelationWorkSetDataTable tableRelationWorkSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RelationWorkSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelationWorkSet = ((RelationWorkSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableRelationWorkSet.IdColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRelationWorkSet.CreateDateTimeColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifyDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRelationWorkSet.ModifyDateTimeColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.ModifyDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableRelationWorkSet.DescriptionColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreateUser {
                get {
                    return ((global::System.Guid)(this[this.tableRelationWorkSet.CreateUserColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.CreateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ModifyUser {
                get {
                    return ((global::System.Guid)(this[this.tableRelationWorkSet.ModifyUserColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.ModifyUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HourlyRate {
                get {
                    return ((double)(this[this.tableRelationWorkSet.HourlyRateColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.HourlyRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Hours {
                get {
                    return ((double)(this[this.tableRelationWorkSet.HoursColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.HoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AmountPaidBack {
                get {
                    return ((double)(this[this.tableRelationWorkSet.AmountPaidBackColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.AmountPaidBackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AmountEXVat {
                get {
                    return ((double)(this[this.tableRelationWorkSet.AmountEXVatColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.AmountEXVatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VATAmount {
                get {
                    return ((double)(this[this.tableRelationWorkSet.VATAmountColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalAmount {
                get {
                    return ((double)(this[this.tableRelationWorkSet.TotalAmountColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AgreementDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRelationWorkSet.AgreementDateTimeColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.AgreementDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVATApplicable {
                get {
                    return ((bool)(this[this.tableRelationWorkSet.IsVATApplicableColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.IsVATApplicableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTreatedAsAdvancePayment {
                get {
                    return ((bool)(this[this.tableRelationWorkSet.IsTreatedAsAdvancePaymentColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.IsTreatedAsAdvancePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableRelationWorkSet.IsActiveColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VATPercentage {
                get {
                    return ((double)(this[this.tableRelationWorkSet.VATPercentageColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.VATPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WorkType {
                get {
                    return ((string)(this[this.tableRelationWorkSet.WorkTypeColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Relation_Id {
                get {
                    return ((global::System.Guid)(this[this.tableRelationWorkSet.Relation_IdColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.Relation_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LedgerBookingCode_Id {
                get {
                    return ((global::System.Guid)(this[this.tableRelationWorkSet.LedgerBookingCode_IdColumn]));
                }
                set {
                    this[this.tableRelationWorkSet.LedgerBookingCode_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetRow RelationSetRow {
                get {
                    return ((RelationSetRow)(this.GetParentRow(this.Table.ParentRelations["RelationRelationWork"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RelationRelationWork"]);
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RelationSetRowChangeEvent : global::System.EventArgs {
            
            private RelationSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetRowChangeEvent(RelationSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RelationAddressSetRowChangeEvent : global::System.EventArgs {
            
            private RelationAddressSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRowChangeEvent(RelationAddressSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationAddressSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LocationSetRowChangeEvent : global::System.EventArgs {
            
            private LocationSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRowChangeEvent(LocationSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LocationSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RelationWorkSetRowChangeEvent : global::System.EventArgs {
            
            private RelationWorkSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationWorkSetRowChangeEvent(RelationWorkSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RelationWorkSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TMS_Recycling.DataSetRelationWorkTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RelationSetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RelationSetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RelationSet";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("CreateDateTime", "CreateDateTime");
            tableMapping.ColumnMappings.Add("ModifyDateTime", "ModifyDateTime");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("CreateUser", "CreateUser");
            tableMapping.ColumnMappings.Add("ModifyUser", "ModifyUser");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("VATNumber", "VATNumber");
            tableMapping.ColumnMappings.Add("PhoneNumber", "PhoneNumber");
            tableMapping.ColumnMappings.Add("EMail", "EMail");
            tableMapping.ColumnMappings.Add("YourReference", "YourReference");
            tableMapping.ColumnMappings.Add("CustomerNumber", "CustomerNumber");
            tableMapping.ColumnMappings.Add("CustomerType", "CustomerType");
            tableMapping.ColumnMappings.Add("PreferredCurrency", "PreferredCurrency");
            tableMapping.ColumnMappings.Add("IsSystemUser", "IsSystemUser");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["TMSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        RelationSet.Id, RelationSet.CreateDateTime, RelationSet.ModifyDateTime, RelationSet.Description, RelationSet.CreateUser, RelationSet.ModifyUser, 
                         RelationSet.IsActive, RelationSet.VATNumber, RelationSet.PhoneNumber, RelationSet.EMail, RelationSet.YourReference, RelationSet.CustomerNumber, 
                         RelationSet.CustomerType, RelationSet.PreferredCurrency, RelationSet.IsSystemUser
FROM            RelationSet INNER JOIN
                         RelationWorkSet ON RelationSet.Id = RelationWorkSet.Relation_Id
WHERE        (RelationWorkSet.Id = @Id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 16, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRelationWork.RelationSetDataTable dataTable, System.Guid Id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(Id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRelationWork.RelationSetDataTable GetData(System.Guid Id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(Id));
            DataSetRelationWork.RelationSetDataTable dataTable = new DataSetRelationWork.RelationSetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RelationAddressSetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RelationAddressSetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RelationAddressSet";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("CreateDateTime", "CreateDateTime");
            tableMapping.ColumnMappings.Add("ModifyDateTime", "ModifyDateTime");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("CreateUser", "CreateUser");
            tableMapping.ColumnMappings.Add("ModifyUser", "ModifyUser");
            tableMapping.ColumnMappings.Add("AdressLine1", "AdressLine1");
            tableMapping.ColumnMappings.Add("AdressLine2", "AdressLine2");
            tableMapping.ColumnMappings.Add("AdressLine3", "AdressLine3");
            tableMapping.ColumnMappings.Add("ZIPcode", "ZIPcode");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("Relation_Id", "Relation_Id");
            tableMapping.ColumnMappings.Add("AdressType", "AdressType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["TMSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        RelationAddressSet.Id, RelationAddressSet.CreateDateTime, RelationAddressSet.ModifyDateTime, RelationAddressSet.Description, RelationAddressSet.CreateUser, 
                         RelationAddressSet.ModifyUser, RelationAddressSet.AdressLine1, RelationAddressSet.AdressLine2, RelationAddressSet.AdressLine3, RelationAddressSet.ZIPcode, 
                         RelationAddressSet.City, RelationAddressSet.Country, RelationAddressSet.IsActive, RelationAddressSet.Relation_Id, RelationAddressSet.AdressType
FROM            RelationAddressSet INNER JOIN
                         RelationSet ON RelationAddressSet.Relation_Id = RelationSet.Id INNER JOIN
                         RelationWorkSet ON RelationSet.Id = RelationWorkSet.Relation_Id
WHERE        (RelationAddressSet.AdressType = 'Invoice') AND (RelationWorkSet.Id = @Id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 16, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRelationWork.RelationAddressSetDataTable dataTable, System.Guid Id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(Id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRelationWork.RelationAddressSetDataTable GetData(System.Guid Id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(Id));
            DataSetRelationWork.RelationAddressSetDataTable dataTable = new DataSetRelationWork.RelationAddressSetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LocationSetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LocationSetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LocationSet";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("CreateDateTime", "CreateDateTime");
            tableMapping.ColumnMappings.Add("ModifyDateTime", "ModifyDateTime");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("CreateUser", "CreateUser");
            tableMapping.ColumnMappings.Add("ModifyUser", "ModifyUser");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("ZIPcode", "ZIPcode");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("VATNumber", "VATNumber");
            tableMapping.ColumnMappings.Add("PhoneNumber", "PhoneNumber");
            tableMapping.ColumnMappings.Add("EMail", "EMail");
            tableMapping.ColumnMappings.Add("PreferredCurrency", "PreferredCurrency");
            tableMapping.ColumnMappings.Add("LocationNumber", "LocationNumber");
            tableMapping.ColumnMappings.Add("AdressLine1", "AdressLine1");
            tableMapping.ColumnMappings.Add("AdressLine2", "AdressLine2");
            tableMapping.ColumnMappings.Add("AdressLine3", "AdressLine3");
            tableMapping.ColumnMappings.Add("InvoiceAddress", "InvoiceAddress");
            tableMapping.ColumnMappings.Add("InvoiceFooter", "InvoiceFooter");
            tableMapping.ColumnMappings.Add("InvoicePrintLogo", "InvoicePrintLogo");
            tableMapping.ColumnMappings.Add("DefaultVATPercentage", "DefaultVATPercentage");
            tableMapping.ColumnMappings.Add("DefaultHourlyRate", "DefaultHourlyRate");
            tableMapping.ColumnMappings.Add("DefaultWeighingTariff", "DefaultWeighingTariff");
            tableMapping.ColumnMappings.Add("MaterialForDirtId", "MaterialForDirtId");
            tableMapping.ColumnMappings.Add("MaterialForWorkId", "MaterialForWorkId");
            tableMapping.ColumnMappings.Add("CashLedgerId", "CashLedgerId");
            tableMapping.ColumnMappings.Add("BankLedgerId", "BankLedgerId");
            tableMapping.ColumnMappings.Add("InvoiceFooterPerPage", "InvoiceFooterPerPage");
            tableMapping.ColumnMappings.Add("CompanyLogoImage", "CompanyLogoImage");
            tableMapping.ColumnMappings.Add("CompanyMembershipsLogo", "CompanyMembershipsLogo");
            tableMapping.ColumnMappings.Add("DefaultWeighingTariffBookingCode_Id", "DefaultWeighingTariffBookingCode_Id");
            tableMapping.ColumnMappings.Add("RelationSale_Id", "RelationSale_Id");
            tableMapping.ColumnMappings.Add("RelationBuy_Id", "RelationBuy_Id");
            tableMapping.ColumnMappings.Add("DefaultBailPriceBookingCode_Id", "DefaultBailPriceBookingCode_Id");
            tableMapping.ColumnMappings.Add("VIHBCode", "VIHBCode");
            tableMapping.ColumnMappings.Add("ContactPerson", "ContactPerson");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["TMSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        LocationSet.Id, LocationSet.CreateDateTime, LocationSet.ModifyDateTime, LocationSet.Description, LocationSet.CreateUser, LocationSet.ModifyUser, 
                         LocationSet.IsActive, LocationSet.ZIPcode, LocationSet.City, LocationSet.Country, LocationSet.VATNumber, LocationSet.PhoneNumber, LocationSet.EMail, 
                         LocationSet.PreferredCurrency, LocationSet.LocationNumber, LocationSet.AdressLine1, LocationSet.AdressLine2, LocationSet.AdressLine3, 
                         LocationSet.InvoiceAddress, LocationSet.InvoiceFooter, LocationSet.InvoicePrintLogo, LocationSet.DefaultVATPercentage, LocationSet.DefaultHourlyRate, 
                         LocationSet.DefaultWeighingTariff, LocationSet.MaterialForDirtId, LocationSet.MaterialForWorkId, LocationSet.CashLedgerId, LocationSet.BankLedgerId, 
                         LocationSet.InvoiceFooterPerPage, LocationSet.CompanyLogoImage, LocationSet.CompanyMembershipsLogo, LocationSet.DefaultWeighingTariffBookingCode_Id, 
                         LocationSet.RelationSale_Id, LocationSet.RelationBuy_Id, LocationSet.DefaultBailPriceBookingCode_Id, LocationSet.VIHBCode, LocationSet.ContactPerson
FROM            LocationSet INNER JOIN
                         RelationSet ON LocationSet.Id = RelationSet.PreferredLocation_Id INNER JOIN
                         RelationWorkSet ON RelationSet.Id = RelationWorkSet.Relation_Id
WHERE        (RelationWorkSet.Id = @Id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 16, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRelationWork.LocationSetDataTable dataTable, System.Guid Id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(Id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRelationWork.LocationSetDataTable GetData(System.Guid Id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(Id));
            DataSetRelationWork.LocationSetDataTable dataTable = new DataSetRelationWork.LocationSetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RelationWorkSetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RelationWorkSetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RelationWorkSet";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("CreateDateTime", "CreateDateTime");
            tableMapping.ColumnMappings.Add("ModifyDateTime", "ModifyDateTime");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("CreateUser", "CreateUser");
            tableMapping.ColumnMappings.Add("ModifyUser", "ModifyUser");
            tableMapping.ColumnMappings.Add("HourlyRate", "HourlyRate");
            tableMapping.ColumnMappings.Add("Hours", "Hours");
            tableMapping.ColumnMappings.Add("AmountPaidBack", "AmountPaidBack");
            tableMapping.ColumnMappings.Add("AmountEXVat", "AmountEXVat");
            tableMapping.ColumnMappings.Add("VATAmount", "VATAmount");
            tableMapping.ColumnMappings.Add("TotalAmount", "TotalAmount");
            tableMapping.ColumnMappings.Add("AgreementDateTime", "AgreementDateTime");
            tableMapping.ColumnMappings.Add("IsVATApplicable", "IsVATApplicable");
            tableMapping.ColumnMappings.Add("IsTreatedAsAdvancePayment", "IsTreatedAsAdvancePayment");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("VATPercentage", "VATPercentage");
            tableMapping.ColumnMappings.Add("WorkType", "WorkType");
            tableMapping.ColumnMappings.Add("Relation_Id", "Relation_Id");
            tableMapping.ColumnMappings.Add("LedgerBookingCode_Id", "LedgerBookingCode_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [RelationWorkSet] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [RelationWorkSet] SET [Id] = @Id, [CreateDateTime] = @CreateDateTime, [ModifyDateTime] = @ModifyDateTime, [Description] = @Description, [CreateUser] = @CreateUser, [ModifyUser] = @ModifyUser, [HourlyRate] = @HourlyRate, [Hours] = @Hours, [AmountPaidBack] = @AmountPaidBack, [AmountEXVat] = @AmountEXVat, [VATAmount] = @VATAmount, [TotalAmount] = @TotalAmount, [AgreementDateTime] = @AgreementDateTime, [IsVATApplicable] = @IsVATApplicable, [IsTreatedAsAdvancePayment] = @IsTreatedAsAdvancePayment, [IsActive] = @IsActive, [VATPercentage] = @VATPercentage, [WorkType] = @WorkType, [Relation_Id] = @Relation_Id, [LedgerBookingCode_Id] = @LedgerBookingCode_Id WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifyDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifyDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateUser", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifyUser", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifyUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hours", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmountPaidBack", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmountPaidBack", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmountEXVat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmountEXVat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VATAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VATAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgreementDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsVATApplicable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsVATApplicable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsTreatedAsAdvancePayment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTreatedAsAdvancePayment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VATPercentage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VATPercentage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Relation_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Relation_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LedgerBookingCode_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LedgerBookingCode_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["TMSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Id, CreateDateTime, ModifyDateTime, Description, CreateUser, ModifyUser, HourlyRate, Hours, AmountPaidBack, AmountEXVat, VATAmount, TotalAmount, 
                         AgreementDateTime, IsVATApplicable, IsTreatedAsAdvancePayment, IsActive, VATPercentage, WorkType, Relation_Id, LedgerBookingCode_Id
FROM            RelationWorkSet
WHERE        (Id = @Id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 16, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRelationWork.RelationWorkSetDataTable dataTable, System.Guid Id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(Id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRelationWork.RelationWorkSetDataTable GetData(System.Guid Id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(Id));
            DataSetRelationWork.RelationWorkSetDataTable dataTable = new DataSetRelationWork.RelationWorkSetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRelationWork.RelationWorkSetDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRelationWork dataSet) {
            return this.Adapter.Update(dataSet, "RelationWorkSet");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid Id, 
                    System.DateTime CreateDateTime, 
                    System.DateTime ModifyDateTime, 
                    string Description, 
                    System.Guid CreateUser, 
                    System.Guid ModifyUser, 
                    double HourlyRate, 
                    double Hours, 
                    double AmountPaidBack, 
                    double AmountEXVat, 
                    double VATAmount, 
                    double TotalAmount, 
                    System.DateTime AgreementDateTime, 
                    bool IsVATApplicable, 
                    bool IsTreatedAsAdvancePayment, 
                    bool IsActive, 
                    double VATPercentage, 
                    string WorkType, 
                    System.Guid Relation_Id, 
                    System.Guid LedgerBookingCode_Id, 
                    System.Guid Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(CreateDateTime));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(ModifyDateTime));
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.Guid)(CreateUser));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.Guid)(ModifyUser));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(HourlyRate));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Hours));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(AmountPaidBack));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(AmountEXVat));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(VATAmount));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(TotalAmount));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(AgreementDateTime));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(IsVATApplicable));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(IsTreatedAsAdvancePayment));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(IsActive));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(VATPercentage));
            if ((WorkType == null)) {
                throw new global::System.ArgumentNullException("WorkType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(WorkType));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.Guid)(Relation_Id));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.Guid)(LedgerBookingCode_Id));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime CreateDateTime, 
                    System.DateTime ModifyDateTime, 
                    string Description, 
                    System.Guid CreateUser, 
                    System.Guid ModifyUser, 
                    double HourlyRate, 
                    double Hours, 
                    double AmountPaidBack, 
                    double AmountEXVat, 
                    double VATAmount, 
                    double TotalAmount, 
                    System.DateTime AgreementDateTime, 
                    bool IsVATApplicable, 
                    bool IsTreatedAsAdvancePayment, 
                    bool IsActive, 
                    double VATPercentage, 
                    string WorkType, 
                    System.Guid Relation_Id, 
                    System.Guid LedgerBookingCode_Id, 
                    System.Guid Original_Id) {
            return this.Update(Original_Id, CreateDateTime, ModifyDateTime, Description, CreateUser, ModifyUser, HourlyRate, Hours, AmountPaidBack, AmountEXVat, VATAmount, TotalAmount, AgreementDateTime, IsVATApplicable, IsTreatedAsAdvancePayment, IsActive, VATPercentage, WorkType, Relation_Id, LedgerBookingCode_Id, Original_Id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private RelationWorkSetTableAdapter _relationWorkSetTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RelationWorkSetTableAdapter RelationWorkSetTableAdapter {
            get {
                return this._relationWorkSetTableAdapter;
            }
            set {
                this._relationWorkSetTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._relationWorkSetTableAdapter != null) 
                            && (this._relationWorkSetTableAdapter.Connection != null))) {
                    return this._relationWorkSetTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._relationWorkSetTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSetRelationWork dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._relationWorkSetTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RelationWorkSet.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._relationWorkSetTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSetRelationWork dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._relationWorkSetTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RelationWorkSet.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._relationWorkSetTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSetRelationWork dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._relationWorkSetTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RelationWorkSet.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._relationWorkSetTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSetRelationWork dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._relationWorkSetTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._relationWorkSetTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._relationWorkSetTableAdapter != null)) {
                    revertConnections.Add(this._relationWorkSetTableAdapter, this._relationWorkSetTableAdapter.Connection);
                    this._relationWorkSetTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._relationWorkSetTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._relationWorkSetTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._relationWorkSetTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._relationWorkSetTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._relationWorkSetTableAdapter != null)) {
                    this._relationWorkSetTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._relationWorkSetTableAdapter]));
                    this._relationWorkSetTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591